// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _awgn_top_HH_
#define _awgn_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "operator_s.h"

namespace ap_rtl {

struct awgn_top : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > snr_V_V_dout;
    sc_in< sc_logic > snr_V_V_empty_n;
    sc_out< sc_logic > snr_V_V_read;
    sc_out< sc_lv<16> > noise_V_V_din;
    sc_in< sc_logic > noise_V_V_full_n;
    sc_out< sc_logic > noise_V_V_write;


    // Module declarations
    awgn_top(sc_module_name name);
    SC_HAS_PROCESS(awgn_top);

    ~awgn_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    operator_s* grp_operator_s_fu_49;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > snr_V_V_blk_n;
    sc_signal< sc_logic > noise_V_V_blk_n;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_V_1_reg_63;
    sc_signal< sc_lv<16> > grp_operator_s_fu_49_ap_return;
    sc_signal< sc_lv<16> > noiseSample_V_reg_68;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_operator_s_fu_49_ap_done;
    sc_signal< sc_logic > grp_operator_s_fu_49_ap_start;
    sc_signal< sc_logic > grp_operator_s_fu_49_ap_idle;
    sc_signal< sc_logic > grp_operator_s_fu_49_ap_ready;
    sc_signal< sc_logic > ap_reg_grp_operator_s_fu_49_ap_start;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_operator_s_fu_49_ap_start();
    void thread_noise_V_V_blk_n();
    void thread_noise_V_V_din();
    void thread_noise_V_V_write();
    void thread_snr_V_V_blk_n();
    void thread_snr_V_V_read();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
