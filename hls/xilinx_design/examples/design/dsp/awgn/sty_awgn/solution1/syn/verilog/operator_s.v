// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module operator_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        snr_V_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 9'b1;
parameter    ap_ST_fsm_state2 = 9'b10;
parameter    ap_ST_fsm_state3 = 9'b100;
parameter    ap_ST_fsm_state4 = 9'b1000;
parameter    ap_ST_fsm_state5 = 9'b10000;
parameter    ap_ST_fsm_state6 = 9'b100000;
parameter    ap_ST_fsm_state7 = 9'b1000000;
parameter    ap_ST_fsm_state8 = 9'b10000000;
parameter    ap_ST_fsm_state9 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_7F = 32'b1111111;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv34_0 = 34'b0000000000000000000000000000000000;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv58_0 = 58'b0000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv49_10000000 = 49'b10000000000000000000000000000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv19_78001 = 19'b1111000000000000001;
parameter    ap_const_lv16_7FFF = 16'b111111111111111;
parameter    ap_const_lv16_8001 = 16'b1000000000000001;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] snr_V_read;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [127:0] uut_lfsr128_V;
wire   [8:0] coarseContents_address0;
reg    coarseContents_ce0;
wire   [16:0] coarseContents_q0;
wire   [8:0] gradientContents_address0;
reg    gradientContents_ce0;
wire   [12:0] gradientContents_q0;
wire   [7:0] scaleLookup_address0;
reg    scaleLookup_ce0;
wire   [16:0] scaleLookup_q0;
reg   [127:0] p_Val2_s_reg_1278;
wire   [5:0] tmp_8_fu_351_p2;
reg   [5:0] tmp_8_reg_1287;
wire   [0:0] ap_CS_fsm_state2;
wire   [2:0] i_1_fu_368_p2;
reg   [2:0] i_1_reg_1297;
wire   [1:0] tmp_21_fu_374_p1;
reg   [1:0] tmp_21_reg_1302;
wire   [0:0] exitcond1_fu_362_p2;
wire   [127:0] r_V_9_fu_390_p2;
reg   [127:0] r_V_9_reg_1310;
reg   [0:0] tmp_22_reg_1316;
wire   [0:0] sel_tmp_fu_414_p2;
reg   [0:0] sel_tmp_reg_1325;
wire   [0:0] sel_tmp1_fu_420_p2;
reg   [0:0] sel_tmp1_reg_1333;
wire   [0:0] sel_tmp2_fu_426_p2;
reg   [0:0] sel_tmp2_reg_1340;
wire   [0:0] or_cond_fu_432_p2;
reg   [0:0] or_cond_reg_1351;
wire   [0:0] ap_CS_fsm_state3;
wire   [3:0] normStage_cast_fu_662_p1;
reg   [3:0] normStage_cast_reg_1367;
wire   [2:0] normStage_1_fu_672_p2;
reg   [2:0] normStage_1_reg_1375;
wire   [9:0] tmp_23_fu_697_p1;
reg  signed [9:0] tmp_23_reg_1382;
wire   [0:0] exitcond_fu_666_p2;
reg   [16:0] coarseContents_load_reg_1400;
wire   [0:0] ap_CS_fsm_state5;
wire  signed [22:0] r_V_12_fu_1239_p2;
reg  signed [22:0] r_V_12_reg_1405;
wire   [0:0] sel_tmp10_fu_908_p2;
reg   [0:0] sel_tmp10_reg_1410;
wire   [28:0] noiseGen_3_V_fu_1011_p3;
wire   [0:0] ap_CS_fsm_state6;
wire   [28:0] noiseGen_3_V_1_fu_1050_p3;
wire   [28:0] noiseGen_3_V_3_fu_1088_p3;
wire   [28:0] noiseGen_3_V_6_fu_1104_p3;
wire   [30:0] centralLimitNoise_V_fu_1148_p2;
reg   [30:0] centralLimitNoise_V_reg_1437;
wire   [0:0] ap_CS_fsm_state7;
reg   [16:0] scale_V_reg_1442;
wire   [47:0] r_V_31_fu_1160_p2;
reg   [47:0] r_V_31_reg_1447;
wire   [0:0] ap_CS_fsm_state8;
reg   [4:0] norm_V_address0;
reg    norm_V_ce0;
reg    norm_V_we0;
reg   [14:0] norm_V_d0;
wire   [14:0] norm_V_q0;
reg   [28:0] noiseGen_V_3_reg_235;
reg   [28:0] noiseGen_V_2_reg_247;
reg   [28:0] noiseGen_3_V_2_reg_259;
reg   [28:0] noiseGen_3_V_4_reg_271;
reg   [2:0] i_reg_283;
reg   [2:0] normStage_reg_294;
wire   [0:0] ap_CS_fsm_state4;
wire   [31:0] tmp_8_cast_fu_357_p1;
wire   [31:0] tmp_s_fu_644_p1;
wire   [31:0] tmp_26_cast_fu_657_p1;
wire   [31:0] tmp_13_fu_700_p1;
wire   [31:0] tmp_28_cast_fu_826_p1;
wire   [0:0] phitmp4_fu_742_p2;
wire   [31:0] tmp_27_cast_fu_859_p1;
wire   [127:0] p_Result_s_fu_630_p3;
reg   [8:0] bramChapter_3_V_1_fu_140;
wire   [8:0] bramChapter_0_V_1_fu_486_p3;
wire   [8:0] bramChapter_3_V_9_fu_811_p3;
reg   [8:0] bramChapter_3_V_2_fu_144;
wire   [8:0] bramChapter_1_V_1_fu_478_p3;
wire   [8:0] bramChapter_3_V_8_fu_804_p3;
reg   [8:0] bramChapter_3_V_4_fu_148;
wire   [8:0] newSel3_fu_462_p3;
wire   [8:0] bramChapter_3_V_5_fu_790_p3;
reg   [8:0] bramChapter_3_V_fu_152;
wire   [8:0] newSel1_fu_446_p3;
wire   [8:0] bramChapter_3_V_3_fu_776_p3;
wire   [14:0] r_V_15_fu_868_p2;
wire   [4:0] tmp_3_fu_339_p3;
wire   [5:0] i_cast_cast_fu_335_p1;
wire   [5:0] p_shl_cast_fu_347_p1;
wire   [6:0] op2_assign_fu_378_p3;
wire   [127:0] tmp_7_fu_386_p1;
wire   [8:0] newSel_fu_438_p3;
wire   [8:0] newSel2_fu_454_p3;
wire   [8:0] sel_tmp3_fu_470_p3;
wire   [29:0] tmp_9_fu_526_p4;
wire   [63:0] r_V_19_fu_535_p3;
wire   [63:0] lfsr1_V_fu_514_p4;
wire   [63:0] r_V_20_fu_543_p2;
wire   [28:0] r_V_s_fu_549_p4;
wire   [63:0] r_V_21_fu_559_p1;
wire   [63:0] r_V_22_fu_563_p2;
wire   [63:0] r_V_23_fu_569_p2;
wire   [5:0] tmp_18_fu_581_p1;
wire   [63:0] r_V_25_fu_584_p3;
wire   [63:0] lfsr2_V_fu_523_p1;
wire   [63:0] r_V_26_fu_592_p2;
wire   [50:0] r_V_6_fu_598_p4;
wire   [63:0] r_V_27_fu_608_p1;
wire   [63:0] r_V_28_fu_612_p2;
wire   [63:0] r_V_29_fu_618_p2;
wire   [63:0] r_V_24_fu_575_p2;
wire   [63:0] r_V_30_fu_624_p2;
wire   [5:0] normStage_cast1_cast_fu_648_p1;
wire   [5:0] tmp_4_fu_652_p2;
wire   [4:0] phitmp2_fu_678_p4;
wire   [8:0] grp_fu_318_p6;
wire   [8:0] tmp_11_fu_687_p1;
wire   [8:0] tmp_12_fu_691_p2;
wire   [2:0] op2_assign_2_fu_706_p2;
wire   [3:0] op2_assign_2_cast_fu_712_p1;
wire   [3:0] r_V_14_fu_716_p2;
wire   [3:0] op2_assign_1_fu_722_p2;
wire   [14:0] op2_assign_1_cast_fu_728_p1;
wire   [14:0] tmp_15_fu_732_p2;
wire   [8:0] tmp_24_fu_738_p1;
wire   [3:0] op2_assign_3_fu_748_p2;
wire   [8:0] op2_assign_3_cast_fu_753_p1;
wire   [8:0] r_V_16_fu_757_p2;
wire   [8:0] bramChapter_3_V_10_fu_763_p2;
wire   [8:0] newSel15_fu_769_p3;
wire   [8:0] newSel16_fu_783_p3;
wire   [8:0] bramChapter_3_V_7_fu_797_p3;
wire   [5:0] tmp_42_cast_cast_fu_818_p1;
wire   [5:0] tmp_19_fu_821_p2;
wire   [5:0] tmp_38_cast_cast_fu_851_p1;
wire   [5:0] tmp_16_fu_854_p2;
wire   [14:0] tmp_39_cast_fu_864_p1;
wire   [0:0] sel_tmp7_fu_882_p2;
wire   [0:0] sel_tmp8_fu_887_p2;
wire   [0:0] sel_tmp9_fu_892_p2;
wire   [0:0] tmp13_fu_903_p2;
wire   [0:0] tmp12_fu_897_p2;
wire   [26:0] r_V_13_fu_917_p3;
wire  signed [28:0] tmp_14_fu_914_p1;
wire   [28:0] r_V_11_cast_fu_924_p1;
wire   [0:0] sel_tmp4_fu_940_p2;
wire   [0:0] sel_tmp12_fu_959_p2;
wire   [0:0] sel_tmp11_fu_955_p2;
wire   [28:0] noiseGen_0_V_fu_928_p2;
wire   [0:0] sel_tmp6_fu_950_p2;
wire   [0:0] sel_tmp5_fu_945_p2;
wire   [28:0] noiseGen_0_V_2_fu_934_p2;
wire   [0:0] or_cond2_fu_972_p2;
wire   [0:0] or_cond3_fu_985_p2;
wire   [28:0] newSel4_fu_978_p3;
wire   [28:0] newSel5_fu_990_p3;
wire   [0:0] or_cond4_fu_998_p2;
wire   [28:0] newSel6_fu_1003_p3;
wire   [28:0] newSel8_fu_1019_p3;
wire   [28:0] newSel9_fu_1027_p3;
wire   [28:0] newSel7_fu_1035_p3;
wire   [28:0] newSel10_fu_1042_p3;
wire   [28:0] newSel11_fu_1058_p3;
wire   [28:0] newSel12_fu_1066_p3;
wire   [28:0] newSel13_fu_1073_p3;
wire   [28:0] newSel14_fu_1080_p3;
wire   [0:0] sel_tmp13_fu_963_p2;
wire   [0:0] sel_tmp14_fu_968_p2;
wire   [28:0] noiseGen_3_V_5_fu_1096_p3;
wire  signed [29:0] p_3_cast_fu_1116_p1;
wire  signed [29:0] p_2_cast_fu_1112_p1;
wire   [29:0] tmp_fu_1128_p2;
wire  signed [29:0] tmp_cast_fu_1120_p1;
wire  signed [29:0] tmp_cast_14_fu_1124_p1;
wire   [29:0] tmp1_fu_1138_p2;
wire  signed [30:0] tmp184_cast_fu_1144_p1;
wire  signed [30:0] tmp183_cast_fu_1134_p1;
wire  signed [30:0] r_V_31_fu_1160_p0;
wire   [16:0] r_V_31_fu_1160_p1;
wire   [0:0] ap_CS_fsm_state9;
wire   [48:0] tmp_2_fu_1166_p1;
wire   [48:0] r_V_fu_1169_p2;
wire   [3:0] tmp_20_fu_1185_p4;
wire   [18:0] roundedNoise_V_fu_1175_p4;
wire   [0:0] icmp_fu_1195_p2;
wire   [0:0] tmp_5_fu_1201_p2;
wire   [0:0] tmp_6_fu_1225_p2;
wire   [15:0] saturatedNoise_V_1_fu_1217_p3;
wire   [15:0] saturatedNoise_V_fu_1207_p4;
wire   [12:0] r_V_12_fu_1239_p0;
reg   [8:0] ap_NS_fsm;
wire   [22:0] r_V_12_fu_1239_p00;
wire   [47:0] r_V_31_fu_1160_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'b1;
#0 uut_lfsr128_V = 128'b1001000110100010101100111100010011010101111001101111011110001001000110100010101100111100010011010101111001101111011110000;
end

operator_s_coarsebkb #(
    .DataWidth( 17 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
coarseContents_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(coarseContents_address0),
    .ce0(coarseContents_ce0),
    .q0(coarseContents_q0)
);

operator_s_gradiecud #(
    .DataWidth( 13 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
gradientContents_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gradientContents_address0),
    .ce0(gradientContents_ce0),
    .q0(gradientContents_q0)
);

operator_s_scaleLdEe #(
    .DataWidth( 17 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
scaleLookup_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(scaleLookup_address0),
    .ce0(scaleLookup_ce0),
    .q0(scaleLookup_q0)
);

operator_s_norm_V #(
    .DataWidth( 15 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
norm_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(norm_V_address0),
    .ce0(norm_V_ce0),
    .we0(norm_V_we0),
    .d0(norm_V_d0),
    .q0(norm_V_q0)
);

awgn_top_mux_42_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .din3_WIDTH( 9 ),
    .din4_WIDTH( 9 ),
    .din5_WIDTH( 2 ),
    .dout_WIDTH( 9 ))
awgn_top_mux_42_9_1_U0(
    .din1(bramChapter_3_V_1_fu_140),
    .din2(bramChapter_3_V_2_fu_144),
    .din3(bramChapter_3_V_4_fu_148),
    .din4(bramChapter_3_V_fu_152),
    .din5(tmp_21_reg_1302),
    .dout(grp_fu_318_p6)
);

awgn_top_mul_mul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 23 ))
awgn_top_mul_mul_eOg_U1(
    .din0(r_V_12_fu_1239_p0),
    .din1(tmp_23_reg_1382),
    .dout(r_V_12_fu_1239_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2))) begin
        bramChapter_3_V_1_fu_140 <= bramChapter_3_V_9_fu_811_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0))) begin
        bramChapter_3_V_1_fu_140 <= bramChapter_0_V_1_fu_486_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2))) begin
        bramChapter_3_V_2_fu_144 <= bramChapter_3_V_8_fu_804_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0))) begin
        bramChapter_3_V_2_fu_144 <= bramChapter_1_V_1_fu_478_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2))) begin
        bramChapter_3_V_4_fu_148 <= bramChapter_3_V_5_fu_790_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0))) begin
        bramChapter_3_V_4_fu_148 <= newSel3_fu_462_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2))) begin
        bramChapter_3_V_fu_152 <= bramChapter_3_V_3_fu_776_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0))) begin
        bramChapter_3_V_fu_152 <= newSel1_fu_446_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_283 <= i_1_reg_1297;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        i_reg_283 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        normStage_reg_294 <= normStage_1_reg_1375;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0))) begin
        normStage_reg_294 <= ap_const_lv3_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        centralLimitNoise_V_reg_1437 <= centralLimitNoise_V_fu_1148_p2;
        scale_V_reg_1442 <= scaleLookup_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        coarseContents_load_reg_1400 <= coarseContents_q0;
        r_V_12_reg_1405 <= r_V_12_fu_1239_p2;
        sel_tmp10_reg_1410 <= sel_tmp10_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_1297 <= i_1_fu_368_p2;
        tmp_8_reg_1287 <= tmp_8_fu_351_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        noiseGen_3_V_2_reg_259 <= noiseGen_3_V_3_fu_1088_p3;
        noiseGen_3_V_4_reg_271 <= noiseGen_3_V_6_fu_1104_p3;
        noiseGen_V_2_reg_247 <= noiseGen_3_V_1_fu_1050_p3;
        noiseGen_V_3_reg_235 <= noiseGen_3_V_fu_1011_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        normStage_1_reg_1375 <= normStage_1_fu_672_p2;
        normStage_cast_reg_1367[2 : 0] <= normStage_cast_fu_662_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0))) begin
        or_cond_reg_1351 <= or_cond_fu_432_p2;
        r_V_9_reg_1310 <= r_V_9_fu_390_p2;
        sel_tmp1_reg_1333 <= sel_tmp1_fu_420_p2;
        sel_tmp2_reg_1340 <= sel_tmp2_fu_426_p2;
        sel_tmp_reg_1325 <= sel_tmp_fu_414_p2;
        tmp_21_reg_1302 <= tmp_21_fu_374_p1;
        tmp_22_reg_1316 <= r_V_9_fu_390_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        p_Val2_s_reg_1278 <= uut_lfsr128_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_V_31_reg_1447 <= r_V_31_fu_1160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & ~(1'b0 == exitcond_fu_666_p2))) begin
        tmp_23_reg_1382 <= tmp_23_fu_697_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(exitcond1_fu_362_p2 == 1'b0))) begin
        uut_lfsr128_V <= p_Result_s_fu_630_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | (1'b1 == ap_CS_fsm_state9))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        coarseContents_ce0 = 1'b1;
    end else begin
        coarseContents_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        gradientContents_ce0 = 1'b1;
    end else begin
        gradientContents_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == phitmp4_fu_742_p2))) begin
        norm_V_address0 = tmp_27_cast_fu_859_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2))) begin
        norm_V_address0 = tmp_28_cast_fu_826_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        norm_V_address0 = tmp_26_cast_fu_657_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        norm_V_address0 = tmp_8_cast_fu_357_p1;
    end else begin
        norm_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2)) | ((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == phitmp4_fu_742_p2)))) begin
        norm_V_ce0 = 1'b1;
    end else begin
        norm_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == phitmp4_fu_742_p2))) begin
        norm_V_d0 = r_V_15_fu_868_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2))) begin
        norm_V_d0 = norm_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        norm_V_d0 = {{r_V_9_fu_390_p2[ap_const_lv32_1D : ap_const_lv32_F]}};
    end else begin
        norm_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_362_p2 == 1'b0)) | ((1'b1 == ap_CS_fsm_state4) & (1'b0 == phitmp4_fu_742_p2)) | ((1'b1 == ap_CS_fsm_state4) & ~(1'b0 == phitmp4_fu_742_p2)))) begin
        norm_V_we0 = 1'b1;
    end else begin
        norm_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        scaleLookup_ce0 = 1'b1;
    end else begin
        scaleLookup_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((exitcond1_fu_362_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (~(1'b0 == exitcond_fu_666_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_return = ((tmp_6_fu_1225_p2[0:0] === 1'b1) ? saturatedNoise_V_1_fu_1217_p3 : saturatedNoise_V_fu_1207_p4);

assign bramChapter_0_V_1_fu_486_p3 = ((sel_tmp2_fu_426_p2[0:0] === 1'b1) ? ap_const_lv9_0 : bramChapter_3_V_1_fu_140);

assign bramChapter_1_V_1_fu_478_p3 = ((sel_tmp2_fu_426_p2[0:0] === 1'b1) ? bramChapter_3_V_2_fu_144 : sel_tmp3_fu_470_p3);

assign bramChapter_3_V_10_fu_763_p2 = (r_V_16_fu_757_p2 + grp_fu_318_p6);

assign bramChapter_3_V_3_fu_776_p3 = ((or_cond_reg_1351[0:0] === 1'b1) ? bramChapter_3_V_fu_152 : newSel15_fu_769_p3);

assign bramChapter_3_V_5_fu_790_p3 = ((or_cond_reg_1351[0:0] === 1'b1) ? bramChapter_3_V_4_fu_148 : newSel16_fu_783_p3);

assign bramChapter_3_V_7_fu_797_p3 = ((sel_tmp1_reg_1333[0:0] === 1'b1) ? bramChapter_3_V_10_fu_763_p2 : bramChapter_3_V_2_fu_144);

assign bramChapter_3_V_8_fu_804_p3 = ((sel_tmp2_reg_1340[0:0] === 1'b1) ? bramChapter_3_V_2_fu_144 : bramChapter_3_V_7_fu_797_p3);

assign bramChapter_3_V_9_fu_811_p3 = ((sel_tmp2_reg_1340[0:0] === 1'b1) ? bramChapter_3_V_10_fu_763_p2 : bramChapter_3_V_1_fu_140);

assign centralLimitNoise_V_fu_1148_p2 = ($signed(tmp184_cast_fu_1144_p1) + $signed(tmp183_cast_fu_1134_p1));

assign coarseContents_address0 = tmp_13_fu_700_p1;

assign exitcond1_fu_362_p2 = ((i_reg_283 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign exitcond_fu_666_p2 = ((normStage_reg_294 == ap_const_lv3_4) ? 1'b1 : 1'b0);

assign gradientContents_address0 = tmp_13_fu_700_p1;

assign i_1_fu_368_p2 = (i_reg_283 + ap_const_lv3_1);

assign i_cast_cast_fu_335_p1 = i_reg_283;

assign icmp_fu_1195_p2 = (($signed(tmp_20_fu_1185_p4) > $signed(4'b0000)) ? 1'b1 : 1'b0);

assign lfsr1_V_fu_514_p4 = {{p_Val2_s_reg_1278[ap_const_lv32_7F : ap_const_lv32_40]}};

assign lfsr2_V_fu_523_p1 = p_Val2_s_reg_1278[63:0];

assign newSel10_fu_1042_p3 = ((or_cond3_fu_985_p2[0:0] === 1'b1) ? noiseGen_V_2_reg_247 : newSel9_fu_1027_p3);

assign newSel11_fu_1058_p3 = ((sel_tmp12_fu_959_p2[0:0] === 1'b1) ? noiseGen_0_V_fu_928_p2 : noiseGen_3_V_2_reg_259);

assign newSel12_fu_1066_p3 = ((sel_tmp10_reg_1410[0:0] === 1'b1) ? noiseGen_3_V_2_reg_259 : noiseGen_0_V_2_fu_934_p2);

assign newSel13_fu_1073_p3 = ((sel_tmp2_reg_1340[0:0] === 1'b1) ? noiseGen_3_V_2_reg_259 : newSel11_fu_1058_p3);

assign newSel14_fu_1080_p3 = ((or_cond3_fu_985_p2[0:0] === 1'b1) ? newSel12_fu_1066_p3 : noiseGen_3_V_2_reg_259);

assign newSel15_fu_769_p3 = ((sel_tmp_reg_1325[0:0] === 1'b1) ? bramChapter_3_V_fu_152 : bramChapter_3_V_10_fu_763_p2);

assign newSel16_fu_783_p3 = ((sel_tmp_reg_1325[0:0] === 1'b1) ? bramChapter_3_V_10_fu_763_p2 : bramChapter_3_V_4_fu_148);

assign newSel1_fu_446_p3 = ((or_cond_fu_432_p2[0:0] === 1'b1) ? bramChapter_3_V_fu_152 : newSel_fu_438_p3);

assign newSel2_fu_454_p3 = ((sel_tmp_fu_414_p2[0:0] === 1'b1) ? ap_const_lv9_0 : bramChapter_3_V_4_fu_148);

assign newSel3_fu_462_p3 = ((or_cond_fu_432_p2[0:0] === 1'b1) ? bramChapter_3_V_4_fu_148 : newSel2_fu_454_p3);

assign newSel4_fu_978_p3 = ((sel_tmp10_reg_1410[0:0] === 1'b1) ? noiseGen_0_V_fu_928_p2 : noiseGen_V_3_reg_235);

assign newSel5_fu_990_p3 = ((sel_tmp5_fu_945_p2[0:0] === 1'b1) ? noiseGen_V_3_reg_235 : noiseGen_0_V_2_fu_934_p2);

assign newSel6_fu_1003_p3 = ((or_cond3_fu_985_p2[0:0] === 1'b1) ? newSel4_fu_978_p3 : newSel5_fu_990_p3);

assign newSel7_fu_1035_p3 = ((sel_tmp2_reg_1340[0:0] === 1'b1) ? noiseGen_V_2_reg_247 : newSel8_fu_1019_p3);

assign newSel8_fu_1019_p3 = ((sel_tmp12_fu_959_p2[0:0] === 1'b1) ? noiseGen_V_2_reg_247 : noiseGen_0_V_fu_928_p2);

assign newSel9_fu_1027_p3 = ((sel_tmp5_fu_945_p2[0:0] === 1'b1) ? noiseGen_0_V_2_fu_934_p2 : noiseGen_V_2_reg_247);

assign newSel_fu_438_p3 = ((sel_tmp_fu_414_p2[0:0] === 1'b1) ? bramChapter_3_V_fu_152 : ap_const_lv9_0);

assign noiseGen_0_V_2_fu_934_p2 = ($signed(r_V_11_cast_fu_924_p1) + $signed(tmp_14_fu_914_p1));

assign noiseGen_0_V_fu_928_p2 = ($signed(tmp_14_fu_914_p1) - $signed(r_V_11_cast_fu_924_p1));

assign noiseGen_3_V_1_fu_1050_p3 = ((or_cond4_fu_998_p2[0:0] === 1'b1) ? newSel7_fu_1035_p3 : newSel10_fu_1042_p3);

assign noiseGen_3_V_3_fu_1088_p3 = ((or_cond4_fu_998_p2[0:0] === 1'b1) ? newSel13_fu_1073_p3 : newSel14_fu_1080_p3);

assign noiseGen_3_V_5_fu_1096_p3 = ((sel_tmp13_fu_963_p2[0:0] === 1'b1) ? noiseGen_0_V_2_fu_934_p2 : noiseGen_3_V_4_reg_271);

assign noiseGen_3_V_6_fu_1104_p3 = ((sel_tmp14_fu_968_p2[0:0] === 1'b1) ? noiseGen_0_V_fu_928_p2 : noiseGen_3_V_5_fu_1096_p3);

assign noiseGen_3_V_fu_1011_p3 = ((or_cond4_fu_998_p2[0:0] === 1'b1) ? noiseGen_V_3_reg_235 : newSel6_fu_1003_p3);

assign normStage_1_fu_672_p2 = (normStage_reg_294 + ap_const_lv3_1);

assign normStage_cast1_cast_fu_648_p1 = normStage_reg_294;

assign normStage_cast_fu_662_p1 = normStage_reg_294;

assign op2_assign_1_cast_fu_728_p1 = op2_assign_1_fu_722_p2;

assign op2_assign_1_fu_722_p2 = (r_V_14_fu_716_p2 ^ ap_const_lv4_F);

assign op2_assign_2_cast_fu_712_p1 = op2_assign_2_fu_706_p2;

assign op2_assign_2_fu_706_p2 = (ap_const_lv3_3 - normStage_reg_294);

assign op2_assign_3_cast_fu_753_p1 = op2_assign_3_fu_748_p2;

assign op2_assign_3_fu_748_p2 = ($signed(ap_const_lv4_8) - $signed(normStage_cast_reg_1367));

assign op2_assign_fu_378_p3 = {{tmp_21_fu_374_p1}, {ap_const_lv5_0}};

assign or_cond2_fu_972_p2 = (sel_tmp12_fu_959_p2 | sel_tmp11_fu_955_p2);

assign or_cond3_fu_985_p2 = (sel_tmp10_reg_1410 | sel_tmp6_fu_950_p2);

assign or_cond4_fu_998_p2 = (sel_tmp2_reg_1340 | or_cond2_fu_972_p2);

assign or_cond_fu_432_p2 = (sel_tmp2_fu_426_p2 | sel_tmp1_fu_420_p2);

assign p_2_cast_fu_1112_p1 = $signed(noiseGen_3_V_4_reg_271);

assign p_3_cast_fu_1116_p1 = $signed(noiseGen_3_V_2_reg_259);

assign p_Result_s_fu_630_p3 = {{r_V_24_fu_575_p2}, {r_V_30_fu_624_p2}};

assign p_shl_cast_fu_347_p1 = tmp_3_fu_339_p3;

assign phitmp2_fu_678_p4 = {{r_V_9_reg_1310[ap_const_lv32_E : ap_const_lv32_A]}};

assign phitmp4_fu_742_p2 = ((tmp_24_fu_738_p1 == ap_const_lv9_0) ? 1'b1 : 1'b0);

assign r_V_11_cast_fu_924_p1 = r_V_13_fu_917_p3;

assign r_V_12_fu_1239_p0 = r_V_12_fu_1239_p00;

assign r_V_12_fu_1239_p00 = gradientContents_q0;

assign r_V_13_fu_917_p3 = {{coarseContents_load_reg_1400}, {ap_const_lv10_0}};

assign r_V_14_fu_716_p2 = ap_const_lv4_1 << op2_assign_2_cast_fu_712_p1;

assign r_V_15_fu_868_p2 = norm_V_q0 << tmp_39_cast_fu_864_p1;

assign r_V_16_fu_757_p2 = ap_const_lv9_1 << op2_assign_3_cast_fu_753_p1;

assign r_V_19_fu_535_p3 = {{tmp_9_fu_526_p4}, {ap_const_lv34_0}};

assign r_V_20_fu_543_p2 = (r_V_19_fu_535_p3 ^ lfsr1_V_fu_514_p4);

assign r_V_21_fu_559_p1 = r_V_s_fu_549_p4;

assign r_V_22_fu_563_p2 = (r_V_21_fu_559_p1 ^ r_V_20_fu_543_p2);

assign r_V_23_fu_569_p2 = r_V_22_fu_563_p2 << ap_const_lv64_1;

assign r_V_24_fu_575_p2 = (r_V_23_fu_569_p2 ^ r_V_22_fu_563_p2);

assign r_V_25_fu_584_p3 = {{tmp_18_fu_581_p1}, {ap_const_lv58_0}};

assign r_V_26_fu_592_p2 = (r_V_25_fu_584_p3 ^ lfsr2_V_fu_523_p1);

assign r_V_27_fu_608_p1 = r_V_6_fu_598_p4;

assign r_V_28_fu_612_p2 = (r_V_27_fu_608_p1 ^ r_V_26_fu_592_p2);

assign r_V_29_fu_618_p2 = r_V_28_fu_612_p2 << ap_const_lv64_7;

assign r_V_30_fu_624_p2 = (r_V_29_fu_618_p2 ^ r_V_28_fu_612_p2);

assign r_V_31_fu_1160_p0 = centralLimitNoise_V_reg_1437;

assign r_V_31_fu_1160_p1 = r_V_31_fu_1160_p10;

assign r_V_31_fu_1160_p10 = scale_V_reg_1442;

assign r_V_31_fu_1160_p2 = ($signed(r_V_31_fu_1160_p0) * $signed({{1'b0}, {r_V_31_fu_1160_p1}}));

assign r_V_6_fu_598_p4 = {{r_V_26_fu_592_p2[ap_const_lv32_3F : ap_const_lv32_D]}};

assign r_V_9_fu_390_p2 = p_Val2_s_reg_1278 >> tmp_7_fu_386_p1;

assign r_V_fu_1169_p2 = (ap_const_lv49_10000000 + tmp_2_fu_1166_p1);

assign r_V_s_fu_549_p4 = {{r_V_20_fu_543_p2[ap_const_lv32_3F : ap_const_lv32_23]}};

assign roundedNoise_V_fu_1175_p4 = {{r_V_fu_1169_p2[ap_const_lv32_2F : ap_const_lv32_1D]}};

assign saturatedNoise_V_1_fu_1217_p3 = ((icmp_fu_1195_p2[0:0] === 1'b1) ? ap_const_lv16_7FFF : ap_const_lv16_8001);

assign saturatedNoise_V_fu_1207_p4 = {{r_V_fu_1169_p2[ap_const_lv32_2C : ap_const_lv32_1D]}};

assign scaleLookup_address0 = tmp_s_fu_644_p1;

assign sel_tmp10_fu_908_p2 = (tmp13_fu_903_p2 & tmp12_fu_897_p2);

assign sel_tmp11_fu_955_p2 = (tmp_22_reg_1316 & sel_tmp_reg_1325);

assign sel_tmp12_fu_959_p2 = (tmp_22_reg_1316 & sel_tmp1_reg_1333);

assign sel_tmp13_fu_963_p2 = (sel_tmp2_reg_1340 & sel_tmp4_fu_940_p2);

assign sel_tmp14_fu_968_p2 = (tmp_22_reg_1316 & sel_tmp2_reg_1340);

assign sel_tmp1_fu_420_p2 = ((tmp_21_fu_374_p1 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp2_fu_426_p2 = ((tmp_21_fu_374_p1 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp3_fu_470_p3 = ((sel_tmp1_fu_420_p2[0:0] === 1'b1) ? ap_const_lv9_0 : bramChapter_3_V_2_fu_144);

assign sel_tmp4_fu_940_p2 = (tmp_22_reg_1316 ^ 1'b1);

assign sel_tmp5_fu_945_p2 = (sel_tmp_reg_1325 & sel_tmp4_fu_940_p2);

assign sel_tmp6_fu_950_p2 = (sel_tmp1_reg_1333 & sel_tmp4_fu_940_p2);

assign sel_tmp7_fu_882_p2 = ((tmp_21_reg_1302 != ap_const_lv2_0) ? 1'b1 : 1'b0);

assign sel_tmp8_fu_887_p2 = ((tmp_21_reg_1302 != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_892_p2 = ((tmp_21_reg_1302 != ap_const_lv2_2) ? 1'b1 : 1'b0);

assign sel_tmp_fu_414_p2 = ((tmp_21_fu_374_p1 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign tmp12_fu_897_p2 = (sel_tmp7_fu_882_p2 & sel_tmp8_fu_887_p2);

assign tmp13_fu_903_p2 = (tmp_22_reg_1316 & sel_tmp9_fu_892_p2);

assign tmp183_cast_fu_1134_p1 = $signed(tmp_fu_1128_p2);

assign tmp184_cast_fu_1144_p1 = $signed(tmp1_fu_1138_p2);

assign tmp1_fu_1138_p2 = ($signed(tmp_cast_fu_1120_p1) + $signed(tmp_cast_14_fu_1124_p1));

assign tmp_11_fu_687_p1 = phitmp2_fu_678_p4;

assign tmp_12_fu_691_p2 = (grp_fu_318_p6 + tmp_11_fu_687_p1);

assign tmp_13_fu_700_p1 = tmp_12_fu_691_p2;

assign tmp_14_fu_914_p1 = r_V_12_reg_1405;

assign tmp_15_fu_732_p2 = norm_V_q0 >> op2_assign_1_cast_fu_728_p1;

assign tmp_16_fu_854_p2 = (tmp_8_reg_1287 + tmp_38_cast_cast_fu_851_p1);

assign tmp_18_fu_581_p1 = p_Val2_s_reg_1278[5:0];

assign tmp_19_fu_821_p2 = (tmp_8_reg_1287 + tmp_42_cast_cast_fu_818_p1);

assign tmp_20_fu_1185_p4 = {{r_V_fu_1169_p2[ap_const_lv32_2F : ap_const_lv32_2C]}};

assign tmp_21_fu_374_p1 = i_reg_283[1:0];

assign tmp_23_fu_697_p1 = r_V_9_reg_1310[9:0];

assign tmp_24_fu_738_p1 = tmp_15_fu_732_p2[8:0];

assign tmp_26_cast_fu_657_p1 = tmp_4_fu_652_p2;

assign tmp_27_cast_fu_859_p1 = tmp_16_fu_854_p2;

assign tmp_28_cast_fu_826_p1 = tmp_19_fu_821_p2;

assign tmp_2_fu_1166_p1 = r_V_31_reg_1447;

assign tmp_38_cast_cast_fu_851_p1 = normStage_1_reg_1375;

assign tmp_39_cast_fu_864_p1 = r_V_14_fu_716_p2;

assign tmp_3_fu_339_p3 = {{i_reg_283}, {ap_const_lv2_0}};

assign tmp_42_cast_cast_fu_818_p1 = normStage_1_reg_1375;

assign tmp_4_fu_652_p2 = (tmp_8_reg_1287 + normStage_cast1_cast_fu_648_p1);

assign tmp_5_fu_1201_p2 = (($signed(roundedNoise_V_fu_1175_p4) < $signed(19'b1111000000000000001)) ? 1'b1 : 1'b0);

assign tmp_6_fu_1225_p2 = (icmp_fu_1195_p2 | tmp_5_fu_1201_p2);

assign tmp_7_fu_386_p1 = op2_assign_fu_378_p3;

assign tmp_8_cast_fu_357_p1 = tmp_8_fu_351_p2;

assign tmp_8_fu_351_p2 = (i_cast_cast_fu_335_p1 + p_shl_cast_fu_347_p1);

assign tmp_9_fu_526_p4 = {{p_Val2_s_reg_1278[ap_const_lv32_5D : ap_const_lv32_40]}};

assign tmp_cast_14_fu_1124_p1 = $signed(noiseGen_V_3_reg_235);

assign tmp_cast_fu_1120_p1 = $signed(noiseGen_V_2_reg_247);

assign tmp_fu_1128_p2 = ($signed(p_3_cast_fu_1116_p1) + $signed(p_2_cast_fu_1112_p1));

assign tmp_s_fu_644_p1 = snr_V_read;

always @ (posedge ap_clk) begin
    normStage_cast_reg_1367[3] <= 1'b0;
end

endmodule //operator_s
