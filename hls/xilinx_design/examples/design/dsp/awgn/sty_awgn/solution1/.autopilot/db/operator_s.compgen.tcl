# This script segment is generated automatically by AutoPilot

set id 0
set name awgn_top_mux_42_9_1
set corename simcore_mux
set op mux
set stage_num 1
set max_latency -1
set registered_input 1
set in1_width 9
set in1_signed 0
set in2_width 9
set in2_signed 0
set in3_width 9
set in3_signed 0
set in4_width 9
set in4_signed 0
set in5_width 2
set in5_signed 0
set out_width 9
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mux] == "ap_gen_simcore_mux"} {
eval "ap_gen_simcore_mux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    in3_width ${in3_width} \
    in3_signed ${in3_signed} \
    in4_width ${in4_width} \
    in4_signed ${in4_signed} \
    in5_width ${in5_width} \
    in5_signed ${in5_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mux, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mux
set corename MuxnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_pipemux] == "::AESL_LIB_VIRTEX::xil_gen_pipemux"} {
eval "::AESL_LIB_VIRTEX::xil_gen_pipemux { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    in2_width ${in2_width} \
    in2_signed ${in2_signed} \
    in3_width ${in3_width} \
    in3_signed ${in3_signed} \
    in4_width ${in4_width} \
    in4_signed ${in4_signed} \
    in5_width ${in5_width} \
    in5_signed ${in5_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_pipemux, check your platform lib"
}
}


set id 1
set name awgn_top_mul_mul_eOg
set corename simcore_mul
set op mul
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 13
set in0_signed 0
set in1_width 10
set in1_signed 1
set out_width 23
set exp i0*i1
set arg_lists {i0 {13 0 +} i1 {10 1 +} p {23 1 +} }
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 2
set MemName operator_s_coarsebkb
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 17
set AddrRange 512
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "11111111111111110" "11110101010111100" "11101111111100110" "11101100011001011" "11101001101110100" "11100111100101001" "11100101110010001" "11100100001111000" "11100010110111110" "11100001101010000" "11100000100011101" "11011111100011011" "11011110101000011" "11011101110001101" "11011100111110101" "11011100001111000" "11011011100010001" "11011010110111110" "11011010001111101" "11011001101001101" "11011001000101011" "11011000100010110" "11011000000001101" "11010111100001111" "11010111000011011" "11010110100110001" "11010110001001111" "11010101101110101" "11010101010100010" "11010100111010111" "11010100100010001" "11010100001010010" "11010011110011001" "11010011011100101" "11010011000110110" "11010010110001011" "11010010011100110" "11010010001000100" "11010001110100111" "11010001100001101" "11010001001110111" "11010000111100100" "11010000101010101" "11010000011001001" "11010000001000000" "11001111110111010" "11001111100110111" "11001111010110110" "11001111000111000" "11001110110111100" "11001110101000011" "11001110011001011" "11001110001010111" "11001101111100100" "11001101101110011" "11001101100000100" "11001101010010111" "11001101000101100" "11001100111000010" "11001100101011011" "11001100011110100" "11001100010010000" "11001100000101101" "11001011111001011" "11001011100111100" "11001011010000001" "11001010111001100" "11001010100011011" "11001010001110000" "11001001111001000" "11001001100100101" "11001001010000101" "11001000111101010" "11001000101010010" "11001000010111101" "11001000000101100" "11000111110011110" "11000111100010011" "11000111010001010" "11000111000000101" "11000110110000010" "11000110100000001" "11000110010000011" "11000110000001000" "11000101110001110" "11000101100010111" "11000101010100010" "11000101000101111" "11000100110111110" "11000100101001110" "11000100011100001" "11000100001110101" "11000100000001011" "11000011110100011" "11000011100111100" "11000011011010110" "11000011001000010" "11000010110000000" "11000010011000011" "11000010000001100" "11000001101011001" "11000001010101011" "11000001000000001" "11000000101011011" "11000000010111010" "11000000000011011" "10111111110000001" "10111111011101010" "10111111001010110" "10111110111000101" "10111110100110111" "10111110010101100" "10111110000100100" "10111101110011110" "10111101100011011" "10111101010011010" "10111101000011100" "10111100110100000" "10111100100100110" "10111100010101110" "10111100000111000" "10111011111000100" "10111011101010010" "10111011011100010" "10111011001110011" "10111011000000110" "10111010110011011" "10111010100110010" "10111010010010111" "10111001111001100" "10111001100001000" "10111001001001001" "10111000110001110" "10111000011011001" "10111000000101000" "10110111101111011" "10110111011010010" "10110111000101101" "10110110110001100" "10110110011101110" "10110110001010100" "10110101110111101" "10110101100101001" "10110101010010111" "10110101000001001" "10110100101111110" "10110100011110101" "10110100001101110" "10110011111101010" "10110011101101000" "10110011011101001" "10110011001101100" "10110010111110000" "10110010101110111" "10110010100000000" "10110010010001011" "10110010000010111" "10110001110100101" "10110001100110101" "10110001011000111" "10110001000100101" "10110000101010001" "10110000010000100" "10101111110111011" "10101111011111000" "10101111000111010" "10101110110000001" "10101110011001100" "10101110000011011" "10101101101101111" "10101101011000110" "10101101000100001" "10101100101111111" "10101100011100000" "10101100001000101" "10101011110101101" "10101011100011000" "10101011010000110" "10101010111110110" "10101010101101001" "10101010011011111" "10101010001010110" "10101001111010001" "10101001101001101" "10101001011001100" "10101001001001101" "10101000111010000" "10101000101010101" "10101000011011011" "10101000001100100" "10100111111101110" "10100111101111010" "10100111011010000" "10100110111110010" "10100110100011010" "10100110001000111" "10100101101111011" "10100101010110011" "10100100111110000" "10100100100110010" "10100100001111000" "10100011111000010" "10100011100010000" "10100011001100011" "10100010110111000" "10100010100010010" "10100010001101110" "10100001111001110" "10100001100110001" "10100001010010111" "10100001000000000" "10100000101101011" "10100000011011001" "10100000001001010" "10011111110111101" "10011111100110010" "10011111010101010" "10011111000100100" "10011110110100000" "10011110100011110" "10011110010011110" "10011110000100000" "10011101110100100" "10011101100101010" "10011101001110110" "10011100110001011" "10011100010100111" "10011011111001001" "10011011011110001" "10011011000011101" "10011010101001111" "10011010010000110" "10011001111000010" "10011001100000010" "10011001001000110" "10011000110001110" "10011000011011010" "10011000000101001" "10010111101111100" "10010111011010011" "10010111000101100" "10010110110001001" "10010110011101001" "10010110001001011" "10010101110110001" "10010101100011001" "10010101010000011" "10010100111110000" "10010100101100000" "10010100011010001" "10010100001000101" "10010011110111100" "10010011100110100" "10010011010101110" "10010011000101010" "10010010110101001" "10010010011101001" "10010001111110000" "10010001011111110" "10010001000010010" "10010000100101100" "10010000001001011" "10001111101110000" "10001111010011010" "10001110111001001" "10001110011111101" "10001110000110100" "10001101101110001" "10001101010110001" "10001100111110101" "10001100100111100" "10001100010000111" "10001011111010110" "10001011100101000" "10001011001111101" "10001010111010101" "10001010100110000" "10001010010001110" "10001001111101110" "10001001101010001" "10001001010110111" "10001001000011111" "10001000110001001" "10001000011110110" "10001000001100100" "10000111111010101" "10000111101001000" "10000111010111110" "10000110111110001" "10000110011100111" "10000101111100011" "10000101011100110" "10000100111110000" "10000100011111111" "10000100000010100" "10000011100101110" "10000011001001110" "10000010101110010" "10000010010011011" "10000001111001001" "10000001011111011" "10000001000110001" "10000000101101010" "10000000010101000" "01111111111101001" "01111111100101110" "01111111001110110" "01111110111000001" "01111110100001111" "01111110001100000" "01111101110110100" "01111101100001011" "01111101001100100" "01111100111000001" "01111100100011111" "01111100010000000" "01111011111100011" "01111011101001001" "01111011010110001" "01111011000011011" "01111010100111110" "01111010000011110" "01111001100000101" "01111000111110011" "01111000011101000" "01110111111100100" "01110111011100101" "01110110111101100" "01110110011111001" "01110110000001010" "01110101100100001" "01110101000111101" "01110100101011100" "01110100010000001" "01110011110101001" "01110011011010110" "01110011000000110" "01110010100111010" "01110010001110010" "01110001110101100" "01110001011101011" "01110001000101100" "01110000101110000" "01110000010111000" "01110000000000010" "01101111101001111" "01101111010011111" "01101110111110001" "01101110101000110" "01101110010011101" "01101101111110110" "01101101101010010" "01101101001100000" "01101100100100101" "01101011111110001" "01101011011000101" "01101010110100000" "01101010010000001" "01101001101101010" "01101001001011000" "01101000101001100" "01101000001000110" "01100111101000101" "01100111001001001" "01100110101010010" "01100110001011111" "01100101101110001" "01100101010001000" "01100100110100010" "01100100011000000" "01100011111100011" "01100011100001000" "01100011000110010" "01100010101011110" "01100010010001110" "01100001111000010" "01100001011111000" "01100001000110001" "01100000101101101" "01100000010101100" "01011111111101101" "01011111100110001" "01011111001111000" "01011110111000001" "01011110010110011" "01011101101010011" "01011100111111100" "01011100010101100" "01011011101100100" "01011011000100100" "01011010011101010" "01011001110110111" "01011001010001010" "01011000101100100" "01011000001000011" "01010111100100111" "01010111000010001" "01010110011111111" "01010101111110011" "01010101011101011" "01010100111100111" "01010100011101000" "01010011111101101" "01010011011110101" "01010011000000010" "01010010100010010" "01010010000100110" "01010001100111101" "01010001001011000" "01010000101110101" "01010000010010110" "01001111110111010" "01001111011100000" "01001111000001010" "01001110100110110" "01001110001100100" "01001101100110000" "01001100110011100" "01001100000010010" "01001011010010000" "01001010100010111" "01001001110100101" "01001001000111011" "01001000011011000" "01000111101111100" "01000111000100110" "01000110011010111" "01000101110001101" "01000101001001001" "01000100100001010" "01000011111010001" "01000011010011100" "01000010101101100" "01000010001000001" "01000001100011010" "01000000111111000" "01000000011011001" "00111111110111111" "00111111010101000" "00111110110010101" "00111110010000110" "00111101101111010" "00111101001110001" "00111100101101011" "00111100001101001" "00111011101101001" "00111011001101101" "00111010101110011" "00111010000000010" "00111001000011111" "00111000001000101" "00110111001110101" "00110110010101101" "00110101011101110" "00110100100110111" "00110011110000111" "00110010111011111" "00110010000111101" "00110001010100010" "00110000100001101" "00101111101111110" "00101110111110101" "00101110001110001" "00101101011110010" "00101100101111000" "00101100000000011" "00101011010010011" "00101010100100111" "00101001110111111" "00101001001011011" "00101000011111011" "00100111110011111" "00100111001000110" "00100110011110001" "00100101110100000" "00100101001010001" "00100100100000110" "00100011110111101" "00100011001111000" "00100010100110101" "00100001101010111" "00100000011100001" "00011111001110101" "00011110000010010" "00011100110110111" "00011011101100100" "00011010100011000" "00011001011010011" "00011000010010101" "00010111001011100" "00010110000101001" "00010100111111100" "00010011111010011" "00010010110101111" "00010001110001111" "00010000101110011" "00001111101011011" "00001110101000110" "00001101100110100" "00001100100100101" "00001011100011001" "00001010100001111" "00001001100000111" "00001000100000001" "00000111011111101" "00000110011111010" "00000101011111001" "00000100011111001" "00000011011111010" "00000010011111011" "00000001011111101" "00000000011111111" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.39
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 3
set MemName operator_s_gradiecud
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 13
set AddrRange 512
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "1101101010111" "0111000000111" "0100001100010" "0011000001000" "0010010111010" "0001111100101" "0001101010001" "0001011100100" "0001010010001" "0001001001110" "0001000011000" "0000111101100" "0000111000110" "0000110100110" "0000110001010" "0000101110010" "0000101011100" "0000101001001" "0000100111000" "0000100101001" "0000100011011" "0000100001111" "0000100000011" "0000011111001" "0000011101111" "0000011100110" "0000011011110" "0000011010110" "0000011001111" "0000011001000" "0000011000010" "0000010111100" "0000010110111" "0000010110010" "0000010101101" "0000010101000" "0000010100100" "0000010011111" "0000010011100" "0000010011000" "0000010010100" "0000010010001" "0000010001110" "0000010001011" "0000010001000" "0000010000101" "0000010000010" "0000001111111" "0000001111101" "0000001111011" "0000001111000" "0000001110110" "0000001110100" "0000001110010" "0000001110000" "0000001101110" "0000001101100" "0000001101010" "0000001101001" "0000001100111" "0000001100101" "0000001100100" "0000001100010" "0000001100001" "0000010111101" "0000010111000" "0000010110011" "0000010101110" "0000010101010" "0000010100101" "0000010100001" "0000010011101" "0000010011010" "0000010010110" "0000010010011" "0000010010000" "0000010001101" "0000010001010" "0000010000111" "0000010000100" "0000010000010" "0000001111111" "0000001111101" "0000001111011" "0000001111000" "0000001110110" "0000001110100" "0000001110010" "0000001110000" "0000001101110" "0000001101101" "0000001101011" "0000001101001" "0000001101000" "0000001100110" "0000001100101" "0000011000101" "0000010111111" "0000010111010" "0000010110101" "0000010110000" "0000010101100" "0000010101000" "0000010100100" "0000010100000" "0000010011100" "0000010011001" "0000010010101" "0000010010010" "0000010001111" "0000010001100" "0000010001010" "0000010000111" "0000010000100" "0000010000010" "0000010000000" "0000001111101" "0000001111011" "0000001111001" "0000001110111" "0000001110101" "0000001110011" "0000001110001" "0000001101111" "0000001101110" "0000001101100" "0000001101010" "0000001101001" "0000011001101" "0000011000111" "0000011000010" "0000010111101" "0000010111000" "0000010110011" "0000010101111" "0000010101011" "0000010100111" "0000010100011" "0000010011111" "0000010011100" "0000010011001" "0000010010110" "0000010010011" "0000010010000" "0000010001101" "0000010001010" "0000010001000" "0000010000101" "0000010000011" "0000010000001" "0000001111110" "0000001111100" "0000001111010" "0000001111000" "0000001110110" "0000001110100" "0000001110011" "0000001110001" "0000001101111" "0000001101110" "0000011010110" "0000011010000" "0000011001011" "0000011000101" "0000011000000" "0000010111100" "0000010110111" "0000010110011" "0000010101111" "0000010101011" "0000010100111" "0000010100011" "0000010100000" "0000010011101" "0000010011010" "0000010010111" "0000010010100" "0000010010001" "0000010001110" "0000010001100" "0000010001001" "0000010000111" "0000010000101" "0000010000010" "0000010000000" "0000001111110" "0000001111100" "0000001111010" "0000001111000" "0000001110111" "0000001110101" "0000001110011" "0000011100001" "0000011011011" "0000011010101" "0000011010000" "0000011001010" "0000011000101" "0000011000001" "0000010111100" "0000010111000" "0000010110100" "0000010110000" "0000010101100" "0000010101000" "0000010100101" "0000010100010" "0000010011111" "0000010011100" "0000010011001" "0000010010110" "0000010010011" "0000010010001" "0000010001110" "0000010001100" "0000010001001" "0000010000111" "0000010000101" "0000010000011" "0000010000001" "0000001111111" "0000001111101" "0000001111011" "0000001111001" "0000011101110" "0000011100111" "0000011100001" "0000011011011" "0000011010110" "0000011010000" "0000011001100" "0000011000111" "0000011000010" "0000010111110" "0000010111010" "0000010110110" "0000010110010" "0000010101111" "0000010101011" "0000010101000" "0000010100101" "0000010100010" "0000010011111" "0000010011100" "0000010011001" "0000010010111" "0000010010100" "0000010010010" "0000010001111" "0000010001101" "0000010001011" "0000010001001" "0000010000111" "0000010000101" "0000010000011" "0000010000001" "0000011111100" "0000011110110" "0000011101111" "0000011101001" "0000011100011" "0000011011110" "0000011011001" "0000011010100" "0000011001111" "0000011001010" "0000011000110" "0000011000010" "0000010111110" "0000010111010" "0000010110111" "0000010110011" "0000010110000" "0000010101101" "0000010101001" "0000010100111" "0000010100100" "0000010100001" "0000010011110" "0000010011100" "0000010011001" "0000010010111" "0000010010100" "0000010010010" "0000010010000" "0000010001110" "0000010001100" "0000010001010" "0000100001110" "0000100000111" "0000100000000" "0000011111010" "0000011110100" "0000011101110" "0000011101000" "0000011100011" "0000011011110" "0000011011001" "0000011010101" "0000011010000" "0000011001100" "0000011001000" "0000011000100" "0000011000001" "0000010111101" "0000010111010" "0000010110110" "0000010110011" "0000010110000" "0000010101101" "0000010101011" "0000010101000" "0000010100101" "0000010100011" "0000010100000" "0000010011110" "0000010011100" "0000010011001" "0000010010111" "0000010010101" "0000100100100" "0000100011100" "0000100010101" "0000100001110" "0000100001000" "0000100000010" "0000011111100" "0000011110110" "0000011110001" "0000011101100" "0000011100111" "0000011100010" "0000011011110" "0000011011010" "0000011010110" "0000011010010" "0000011001110" "0000011001010" "0000011000111" "0000011000011" "0000011000000" "0000010111101" "0000010111010" "0000010110111" "0000010110100" "0000010110010" "0000010101111" "0000010101101" "0000010101010" "0000010101000" "0000010100101" "0000010100011" "0000101000000" "0000100111000" "0000100110000" "0000100101001" "0000100100010" "0000100011011" "0000100010101" "0000100001111" "0000100001001" "0000100000100" "0000011111110" "0000011111001" "0000011110101" "0000011110000" "0000011101100" "0000011101000" "0000011100100" "0000011100000" "0000011011100" "0000011011000" "0000011010101" "0000011010010" "0000011001110" "0000011001011" "0000011001000" "0000011000101" "0000011000011" "0000011000000" "0000010111101" "0000010111011" "0000010111000" "0000010110110" "0000101100101" "0000101011100" "0000101010011" "0000101001100" "0000101000100" "0000100111101" "0000100110110" "0000100110000" "0000100101010" "0000100100100" "0000100011110" "0000100011001" "0000100010100" "0000100001111" "0000100001010" "0000100000110" "0000100000001" "0000011111101" "0000011111001" "0000011110101" "0000011110010" "0000011101110" "0000011101011" "0000011100111" "0000011100100" "0000011100001" "0000011011110" "0000011011011" "0000011011000" "0000011010101" "0000011010011" "0000011010000" "0000110011000" "0000110001111" "0000110000110" "0000101111101" "0000101110101" "0000101101110" "0000101100110" "0000101100000" "0000101011001" "0000101010011" "0000101001101" "0000101000111" "0000101000001" "0000100111100" "0000100110111" "0000100110010" "0000100101101" "0000100101001" "0000100100101" "0000100100000" "0000100011100" "0000100011001" "0000100010101" "0000100010001" "0000100001110" "0000100001010" "0000100000111" "0000100000100" "0000100000001" "0000011111110" "0000011111011" "0000011111000" "0000111101001" "0000111011110" "0000111010101" "0000111001100" "0000111000011" "0000110111011" "0000110110011" "0000110101100" "0000110100101" "0000110011110" "0000110011000" "0000110010010" "0000110001100" "0000110000111" "0000110000001" "0000101111100" "0000101110111" "0000101110011" "0000101101110" "0000101101010" "0000101100110" "0000101100010" "0000101011110" "0000101011010" "0000101010111" "0000101010011" "0000101010000" "0000101001101" "0000101001010" "0000101000111" "0000101000100" "0000101000001" "0001001111011" "0001001110001" "0001001101000" "0001001011111" "0001001010111" "0001001001111" "0001001001000" "0001001000010" "0001000111011" "0001000110110" "0001000110000" "0001000101011" "0001000100110" "0001000100010" "0001000011110" "0001000011010" "0001000010111" "0001000010011" "0001000010000" "0001000001110" "0001000001011" "0001000001001" "0001000000111" "0001000000101" "0001000000011" "0001000000010" "0001000000001" "0001000000000" "0000111111111" "0000111111110" "0000111111110" "0000111111110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.39
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 4
set MemName operator_s_scaleLdEe
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 17
set AddrRange 256
set AddrWd 8
set TrueReset 0
set IsROM 1
set ROMData { "11100011111000011" "11100010001111110" "11100000100111111" "11011111000000111" "11011101011010100" "11011011110100111" "11011010010000000" "11011000101011111" "11010111001000100" "11010101100101110" "11010100000011110" "11010010100010100" "11010001000001111" "11001111100001111" "11001110000010110" "11001100100100001" "11001011000110010" "11001001101001001" "11001000001100101" "11000110110000110" "11000101010101100" "11000011111011000" "11000010100001000" "11000001000111110" "10111111101111001" "10111110010111010" "10111100111111111" "10111011101001001" "10111010010011000" "10111000111101100" "10110111101000101" "10110110010100011" "10110101000000110" "10110011101101101" "10110010011011010" "10110001001001011" "10101111111000000" "10101110100111011" "10101101010111010" "10101100000111101" "10101010111000110" "10101001101010010" "10101000011100011" "10100111001111001" "10100110000010011" "10100100110110010" "10100011101010101" "10100010011111100" "10100001010100111" "10100000001010111" "10011111000001011" "10011101111000011" "10011100110000000" "10011011101000000" "10011010100000101" "10011001011001110" "10011000010011011" "10010111001101100" "10010110001000001" "10010101000011001" "10010011111110110" "10010010111010111" "10010001110111100" "10010000110100100" "10001111110010001" "10001110110000001" "10001101101110101" "10001100101101101" "10001011101101000" "10001010101100111" "10001001101101010" "10001000101110000" "10000111101111011" "10000110110001000" "10000101110011010" "10000100110101110" "10000011111000111" "10000010111100011" "10000010000000010" "10000001000100101" "10000000001001011" "01111111001110100" "01111110010100001" "01111101011010010" "01111100100000101" "01111011100111100" "01111010101110111" "01111001110110100" "01111000111110101" "01111000000111001" "01110111010000000" "01110110011001010" "01110101100010111" "01110100101101000" "01110011110111011" "01110011000010010" "01110010001101100" "01110001011001001" "01110000100101000" "01101111110001011" "01101110111110001" "01101110001011001" "01101101011000101" "01101100100110011" "01101011110100101" "01101011000011001" "01101010010010000" "01101001100001010" "01101000110000110" "01101000000000110" "01100111010001000" "01100110100001101" "01100101110010101" "01100101000011111" "01100100010101100" "01100011100111100" "01100010111001110" "01100010001100011" "01100001011111010" "01100000110010101" "01100000000110001" "01011111011010000" "01011110101110010" "01011110000010111" "01011101010111101" "01011100101100111" "01011100000010010" "01011011011000000" "01011010101110001" "01011010000100100" "01011001011011001" "01011000110010001" "01011000001001011" "01010111100001000" "01010110111000110" "01010110010000111" "01010101101001011" "01010101000010000" "01010100011011000" "01010011110100010" "01010011001101111" "01010010100111101" "01010010000001110" "01010001011100001" "01010000110110110" "01010000010001101" "01001111101100110" "01001111001000010" "01001110100011111" "01001101111111111" "01001101011100000" "01001100111000100" "01001100010101010" "01001011110010010" "01001011001111100" "01001010101100111" "01001010001010101" "01001001101000101" "01001001000110111" "01001000100101010" "01001000000100000" "01000111100010111" "01000111000010001" "01000110100001100" "01000110000001001" "01000101100001000" "01000101000001001" "01000100100001011" "01000100000010000" "01000011100010110" "01000011000011110" "01000010100101000" "01000010000110100" "01000001101000001" "01000001001010000" "01000000101100001" "01000000001110011" "00111111110001000" "00111111010011110" "00111110110110101" "00111110011001110" "00111101111101001" "00111101100000110" "00111101000100100" "00111100101000100" "00111100001100101" "00111011110001000" "00111011010101101" "00111010111010011" "00111010011111011" "00111010000100100" "00111001101001111" "00111001001111011" "00111000110101001" "00111000011011001" "00111000000001001" "00110111100111100" "00110111001110000" "00110110110100101" "00110110011011100" "00110110000010100" "00110101101001110" "00110101010001001" "00110100111000101" "00110100100000011" "00110100001000010" "00110011110000011" "00110011011000101" "00110011000001000" "00110010101001101" "00110010010010011" "00110001111011010" "00110001100100011" "00110001001101101" "00110000110111000" "00110000100000101" "00110000001010011" "00101111110100010" "00101111011110011" "00101111001000100" "00101110110010111" "00101110011101100" "00101110001000001" "00101101110011000" "00101101011110000" "00101101001001001" "00101100110100011" "00101100011111110" "00101100001011011" "00101011110111001" "00101011100011000" "00101011001111000" "00101010111011001" "00101010100111100" "00101010010011111" "00101010000000100" "00101001101101010" "00101001011010001" "00101001000111001" "00101000110100010" "00101000100001100" "00101000001110111" "00100111111100100" "00100111101010001" "00100111010111111" "00100111000101111" "00100110110011111" "00100110100010001" "00100110010000011" "00100101111110111" "00100101101101100" "00100101011100001" "00100101001011000" "00100100111001111" "00100100101001000" "00100100011000001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.39
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 5
set MemName operator_s_norm_V
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 15
set AddrRange 20
set AddrWd 5
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.39
set ClkPeriod 10
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 6 \
    name snr_V_read \
    type other \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_snr_V_read \
    op interface \
    ports { snr_V_read { I 8 vector } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -2 \
    name ap_return \
    type ap_return \
    reset_level 1 \
    sync_rst true \
    corename ap_return \
    op interface \
    ports { ap_return { O 16 vector } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -4 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


