///////////////////////////////////////////////////////////////////////////////
// (c) Copyright 2008 Xilinx, Inc. All rights reserved.
//
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
//
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
//
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
//
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES.
// 
// 
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 7.1i
//  \   \         Application : 
//  /   /         Filename : aurora_8b10b_v5_2_GTP_WRAPPER.v
// /___/   /\     Timestamp : 02/08/2005 09:12:43
// \   \  /  \ 
//  \___\/\___\ 
//
////////////////////////////////////////////////////////////////////////////////
//Command: 
//Design Name: aurora_8b10b_v5_2_GTP_WRAPPER
//
// Module aurora_8b10b_v5_2_GTP_WRAPPER
// Generated by Xilinx Architecture Wizard
// Written for synthesis tool: XST
////////////////////////////////////////////////////////////////////////////////

`timescale 1ns / 1ps
(* core_generation_info = "aurora_8b10b_v5_2,aurora_8b10b_v5_2,{backchannel_mode=Sidebands, c_aurora_lanes=4, c_column_used=left, c_gt_clock_1=GTXQ0, c_gt_clock_2=None, c_gt_loc_1=1, c_gt_loc_10=X, c_gt_loc_11=X, c_gt_loc_12=X, c_gt_loc_13=X, c_gt_loc_14=X, c_gt_loc_15=X, c_gt_loc_16=X, c_gt_loc_17=X, c_gt_loc_18=X, c_gt_loc_19=X, c_gt_loc_2=2, c_gt_loc_20=X, c_gt_loc_21=X, c_gt_loc_22=X, c_gt_loc_23=X, c_gt_loc_24=X, c_gt_loc_25=X, c_gt_loc_26=X, c_gt_loc_27=X, c_gt_loc_28=X, c_gt_loc_29=X, c_gt_loc_3=4, c_gt_loc_30=X, c_gt_loc_31=X, c_gt_loc_32=X, c_gt_loc_33=X, c_gt_loc_34=X, c_gt_loc_35=X, c_gt_loc_36=X, c_gt_loc_37=X, c_gt_loc_38=X, c_gt_loc_39=X, c_gt_loc_4=3, c_gt_loc_40=X, c_gt_loc_41=X, c_gt_loc_42=X, c_gt_loc_43=X, c_gt_loc_44=X, c_gt_loc_45=X, c_gt_loc_46=X, c_gt_loc_47=X, c_gt_loc_48=X, c_gt_loc_5=X, c_gt_loc_6=X, c_gt_loc_7=X, c_gt_loc_8=X, c_gt_loc_9=X, c_lane_width=2, c_line_rate=3.125, c_nfc=false, c_nfc_mode=IMM, c_refclk_frequency=125.0, c_simplex=false, c_simplex_mode=TX, c_stream=false, c_ufc=false, flow_mode=None, interface_mode=Framing, dataflow_config=Duplex}" *)
module aurora_8b10b_v5_2_GTX_WRAPPER #
(
    // Channel bond MASTER/SLAVE connection 
    parameter CHAN_BOND_MASTER = 1'b0,
    parameter CHAN_BOND_SLAVE = 1'b1,
    parameter CHAN_BOND_LEVEL = 3'd1,
    parameter CHAN_BOND_MASTER_LANE1 = 1'b1,
    parameter CHAN_BOND_SLAVE_LANE1 = 1'b0,
    parameter CHAN_BOND_LEVEL_LANE1 = 3'd2,
    parameter CHAN_BOND_MASTER_LANE2 = 1'b0,
    parameter CHAN_BOND_SLAVE_LANE2 = 1'b1,
    parameter CHAN_BOND_LEVEL_LANE2 = 3'd1,
    parameter CHAN_BOND_MASTER_LANE3 = 1'b0,
    parameter CHAN_BOND_SLAVE_LANE3 = 1'b1,
    parameter CHAN_BOND_LEVEL_LANE3 = 3'd0,
    

    // Simulation attribute
    parameter   SIM_GTXRESET_SPEEDUP=   0      // Set to 1 to speed up sim reset

)
(

//---------------------- Loopback and Powerdown Ports ----------------------
    LOOPBACK_IN,
//--------------------- Receive Ports - 8b10b Decoder ----------------------
    RXCHARISCOMMA_OUT,
    RXCHARISCOMMA_OUT_LANE1,
    RXCHARISCOMMA_OUT_LANE2,
    RXCHARISCOMMA_OUT_LANE3,
    RXCHARISK_OUT,
    RXCHARISK_OUT_LANE1,
    RXCHARISK_OUT_LANE2,
    RXCHARISK_OUT_LANE3,
    RXDISPERR_OUT,
    RXDISPERR_OUT_LANE1,
    RXDISPERR_OUT_LANE2,
    RXDISPERR_OUT_LANE3,
    RXNOTINTABLE_OUT,
    RXNOTINTABLE_OUT_LANE1,
    RXNOTINTABLE_OUT_LANE2,
    RXNOTINTABLE_OUT_LANE3,
//----------------- Receive Ports - Channel Bonding Ports -----------------
    ENCHANSYNC_IN,
    ENCHANSYNC_IN_LANE1,
    ENCHANSYNC_IN_LANE2,
    ENCHANSYNC_IN_LANE3,
    CHBONDDONE_OUT,
    CHBONDDONE_OUT_LANE1,
    CHBONDDONE_OUT_LANE2,
    CHBONDDONE_OUT_LANE3,
//----------------- Receive Ports - Clock Correction Ports -----------------
    RXBUFERR_OUT,
    RXBUFERR_OUT_LANE1,
    RXBUFERR_OUT_LANE2,
    RXBUFERR_OUT_LANE3,
//------------- Receive Ports - Comma Detection and Alignment --------------
    RXREALIGN_OUT,
    RXREALIGN_OUT_LANE1,
    RXREALIGN_OUT_LANE2,
    RXREALIGN_OUT_LANE3,
    ENMCOMMAALIGN_IN,
    ENMCOMMAALIGN_IN_LANE1,
    ENMCOMMAALIGN_IN_LANE2,
    ENMCOMMAALIGN_IN_LANE3,
    ENPCOMMAALIGN_IN,
    ENPCOMMAALIGN_IN_LANE1,
    ENPCOMMAALIGN_IN_LANE2,
    ENPCOMMAALIGN_IN_LANE3,
//----------------- Receive Ports - RX Data Path interface -----------------
    RXDATA_OUT,
    RXDATA_OUT_LANE1,
    RXDATA_OUT_LANE2,
    RXDATA_OUT_LANE3,
    RXRECCLK1_OUT,
    RXRECCLK1_OUT_LANE1,
    RXRECCLK1_OUT_LANE2,
    RXRECCLK1_OUT_LANE3,
    RXRECCLK2_OUT,
    RXRECCLK2_OUT_LANE1,
    RXRECCLK2_OUT_LANE2,
    RXRECCLK2_OUT_LANE3,
    RXRESET_IN,
    RXRESET_IN_LANE1,
    RXRESET_IN_LANE2,
    RXRESET_IN_LANE3,
    RXUSRCLK_IN,
    RXUSRCLK2_IN,
//----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    RX1N_IN,
    RX1N_IN_LANE1,
    RX1N_IN_LANE2,
    RX1N_IN_LANE3,
    RX1P_IN,
    RX1P_IN_LANE1,
    RX1P_IN_LANE2,
    RX1P_IN_LANE3,
//--------------- Receive Ports - RX Polarity Control Ports ----------------
    RXPOLARITY_IN,
    RXPOLARITY_IN_LANE1,
    RXPOLARITY_IN_LANE2,
    RXPOLARITY_IN_LANE3,
//------------------- Shared Ports - Tile and PLL Ports --------------------
    REFCLK,
    GTXRESET_IN,
    PLLLKDET_OUT,
    PLLLKDET_OUT_LANE1,
    PLLLKDET_OUT_LANE2,
    PLLLKDET_OUT_LANE3,
//-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    TXCHARISK_IN,
    TXCHARISK_IN_LANE1,
    TXCHARISK_IN_LANE2,
    TXCHARISK_IN_LANE3,
//---------------- Transmit Ports - TX Data Path interface -----------------
    TXDATA_IN,
    TXDATA_IN_LANE1,
    TXDATA_IN_LANE2,
    TXDATA_IN_LANE3,
    TXOUTCLK1_OUT,
    TXOUTCLK1_OUT_LANE1,
    TXOUTCLK1_OUT_LANE2,
    TXOUTCLK1_OUT_LANE3,
    TXOUTCLK2_OUT,
    TXOUTCLK2_OUT_LANE1,
    TXOUTCLK2_OUT_LANE2,
    TXOUTCLK2_OUT_LANE3,
    TXRESET_IN,
    TXRESET_IN_LANE1,
    TXRESET_IN_LANE2,
    TXRESET_IN_LANE3,
    TXUSRCLK_IN,
    TXUSRCLK2_IN,
    TXBUFERR_OUT,
    TXBUFERR_OUT_LANE1,
    TXBUFERR_OUT_LANE2,
    TXBUFERR_OUT_LANE3,
//------------- Transmit Ports - TX Driver and OOB signalling --------------
    TX1N_OUT,
    TX1N_OUT_LANE1,
    TX1N_OUT_LANE2,
    TX1N_OUT_LANE3,
    TX1P_OUT,
    TX1P_OUT_LANE1,
    TX1P_OUT_LANE2,
    TX1P_OUT_LANE3,
    POWERDOWN_IN
);
//***************************** Port Declarations *****************************
//---------------------- Loopback and Powerdown Ports ----------------------
 input    [2:0]    LOOPBACK_IN;
//--------------------- Receive Ports - 8b10b Decoder ----------------------
 output  [1:0]  RXCHARISCOMMA_OUT;
 output  [1:0]  RXCHARISK_OUT;
 output  [1:0]  RXDISPERR_OUT;
 output  [1:0]  RXNOTINTABLE_OUT;
 output  [1:0]  RXCHARISCOMMA_OUT_LANE1;
 output  [1:0]  RXCHARISK_OUT_LANE1;
 output  [1:0]  RXDISPERR_OUT_LANE1;
 output  [1:0]  RXNOTINTABLE_OUT_LANE1;
 output  [1:0]  RXCHARISCOMMA_OUT_LANE2;
 output  [1:0]  RXCHARISK_OUT_LANE2;
 output  [1:0]  RXDISPERR_OUT_LANE2;
 output  [1:0]  RXNOTINTABLE_OUT_LANE2;
 output  [1:0]  RXCHARISCOMMA_OUT_LANE3;
 output  [1:0]  RXCHARISK_OUT_LANE3;
 output  [1:0]  RXDISPERR_OUT_LANE3;
 output  [1:0]  RXNOTINTABLE_OUT_LANE3;
//----------------- Receive Ports - Channel Bonding Ports -----------------
 input             ENCHANSYNC_IN; 
 output            CHBONDDONE_OUT;
//----------------- Receive Ports - Clock Correction Ports -----------------
 output            RXBUFERR_OUT;
//------------- Receive Ports - Comma Detection and Alignment --------------
 output            RXREALIGN_OUT;
 input             ENMCOMMAALIGN_IN;
 input             ENPCOMMAALIGN_IN;
//----------------- Receive Ports - RX Data Path interface -----------------
output  [15:0]   RXDATA_OUT; 
 output            RXRECCLK1_OUT;
 output            RXRECCLK2_OUT;
 input             RXRESET_IN;
 input             ENCHANSYNC_IN_LANE1; 
 output            CHBONDDONE_OUT_LANE1;
//----------------- Receive Ports - Clock Correction Ports -----------------
 output            RXBUFERR_OUT_LANE1;
//------------- Receive Ports - Comma Detection and Alignment --------------
 output            RXREALIGN_OUT_LANE1;
 input             ENMCOMMAALIGN_IN_LANE1;
 input             ENPCOMMAALIGN_IN_LANE1;
//----------------- Receive Ports - RX Data Path interface -----------------
output  [15:0]   RXDATA_OUT_LANE1; 
 output            RXRECCLK1_OUT_LANE1;
 output            RXRECCLK2_OUT_LANE1;
 input             RXRESET_IN_LANE1;
 input             ENCHANSYNC_IN_LANE2; 
 output            CHBONDDONE_OUT_LANE2;
//----------------- Receive Ports - Clock Correction Ports -----------------
 output            RXBUFERR_OUT_LANE2;
//------------- Receive Ports - Comma Detection and Alignment --------------
 output            RXREALIGN_OUT_LANE2;
 input             ENMCOMMAALIGN_IN_LANE2;
 input             ENPCOMMAALIGN_IN_LANE2;
//----------------- Receive Ports - RX Data Path interface -----------------
output  [15:0]   RXDATA_OUT_LANE2; 
 output            RXRECCLK1_OUT_LANE2;
 output            RXRECCLK2_OUT_LANE2;
 input             RXRESET_IN_LANE2;
 input             ENCHANSYNC_IN_LANE3; 
 output            CHBONDDONE_OUT_LANE3;
//----------------- Receive Ports - Clock Correction Ports -----------------
 output            RXBUFERR_OUT_LANE3;
//------------- Receive Ports - Comma Detection and Alignment --------------
 output            RXREALIGN_OUT_LANE3;
 input             ENMCOMMAALIGN_IN_LANE3;
 input             ENPCOMMAALIGN_IN_LANE3;
//----------------- Receive Ports - RX Data Path interface -----------------
output  [15:0]   RXDATA_OUT_LANE3; 
 output            RXRECCLK1_OUT_LANE3;
 output            RXRECCLK2_OUT_LANE3;
 input             RXRESET_IN_LANE3;
 input             RXUSRCLK_IN;
 input             RXUSRCLK2_IN;
//----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
 input             RX1N_IN;  
 input             RX1P_IN;  
//--------------- Receive Ports - RX Polarity Control Ports ----------------
 input             RXPOLARITY_IN;
 input             RX1N_IN_LANE1;  
 input             RX1P_IN_LANE1;  
//--------------- Receive Ports - RX Polarity Control Ports ----------------
 input             RXPOLARITY_IN_LANE1;
 input             RX1N_IN_LANE2;  
 input             RX1P_IN_LANE2;  
//--------------- Receive Ports - RX Polarity Control Ports ----------------
 input             RXPOLARITY_IN_LANE2;
 input             RX1N_IN_LANE3;  
 input             RX1P_IN_LANE3;  
//--------------- Receive Ports - RX Polarity Control Ports ----------------
 input             RXPOLARITY_IN_LANE3;
//------------------- Shared Ports - Tile and PLL Ports --------------------
 input             REFCLK;
 input             GTXRESET_IN;
 output            PLLLKDET_OUT;
 output            PLLLKDET_OUT_LANE1;
 output            PLLLKDET_OUT_LANE2;
 output            PLLLKDET_OUT_LANE3;
 input             POWERDOWN_IN;
//-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
 input    [1:0]  TXCHARISK_IN; 
//---------------- Transmit Ports - TX Data Path interface -----------------
 input    [15:0]  TXDATA_IN; 
 output            TXOUTCLK1_OUT;
 output            TXOUTCLK2_OUT;
 input             TXRESET_IN;
 output            TXBUFERR_OUT;
 input    [1:0]  TXCHARISK_IN_LANE1; 
//---------------- Transmit Ports - TX Data Path interface -----------------
 input    [15:0]  TXDATA_IN_LANE1; 
 output            TXOUTCLK1_OUT_LANE1;
 output            TXOUTCLK2_OUT_LANE1;
 input             TXRESET_IN_LANE1;
 output            TXBUFERR_OUT_LANE1;
 input    [1:0]  TXCHARISK_IN_LANE2; 
//---------------- Transmit Ports - TX Data Path interface -----------------
 input    [15:0]  TXDATA_IN_LANE2; 
 output            TXOUTCLK1_OUT_LANE2;
 output            TXOUTCLK2_OUT_LANE2;
 input             TXRESET_IN_LANE2;
 output            TXBUFERR_OUT_LANE2;
 input    [1:0]  TXCHARISK_IN_LANE3; 
//---------------- Transmit Ports - TX Data Path interface -----------------
 input    [15:0]  TXDATA_IN_LANE3; 
 output            TXOUTCLK1_OUT_LANE3;
 output            TXOUTCLK2_OUT_LANE3;
 input             TXRESET_IN_LANE3;
 output            TXBUFERR_OUT_LANE3;
 input             TXUSRCLK_IN;
 input             TXUSRCLK2_IN;
//------------- Transmit Ports - TX Driver and OOB signalling --------------
 output            TX1N_OUT;
 output            TX1P_OUT;
 output            TX1N_OUT_LANE1;
 output            TX1P_OUT_LANE1;
 output            TX1N_OUT_LANE2;
 output            TX1P_OUT_LANE2;
 output            TX1N_OUT_LANE3;
 output            TX1P_OUT_LANE3;

//***************************** Wire Declarations *****************************
// Ground and VCC signals
 wire               tied_to_ground_i;
 wire    [63:0]     tied_to_ground_vec_i;
 wire               tied_to_vcc_i;
 wire    [63:0]     tied_to_vcc_vec_i;
// floating input port connection signals
 wire    [1:0]      open_rxbufstatus_i;
 wire               open_txbufstatus_i;
 wire    [1:0]      open_rxbufstatus_lane1_i;
 wire               open_txbufstatus_lane1_i;
 wire    [1:0]      open_rxbufstatus_lane2_i;
 wire               open_txbufstatus_lane2_i;
 wire    [1:0]      open_rxbufstatus_lane3_i;
 wire               open_txbufstatus_lane3_i;
// wire to output lock signal
 wire               tx_plllkdet_o;
 wire               rx_plllkdet_o;
 wire               tx_plllkdet_lane1_o;
 wire               rx_plllkdet_lane1_o;
 wire               tx_plllkdet_lane2_o;
 wire               rx_plllkdet_lane2_o;
 wire               tx_plllkdet_lane3_o;
 wire               rx_plllkdet_lane3_o;

// Channel Bonding
 wire     [3:0]    chbondi;
 wire     [3:0]    chbondo;
 wire     [3:0]    chbondi_LANE1;
 wire     [3:0]    chbondo_LANE1;
 wire     [3:0]    chbondi_LANE2;
 wire     [3:0]    chbondo_LANE2;
 wire     [3:0]    chbondi_LANE3;
 wire     [3:0]    chbondo_LANE3;

 wire     [3:0]    chbondi_unused_i;
 
 wire              GTXTEST1_0;
 wire              GTXTEST1_1;
 wire              GTXTEST1_2;
 wire              GTXTEST1_3;
 
 

//********************************* Main Body of Code**************************
//-------------------------  Static signal Assigments ---------------------   
 assign tied_to_ground_i             = 1'b0;
 assign tied_to_ground_vec_i         = 64'h0000000000000000;
 assign tied_to_vcc_i                = 1'b1;
 assign tied_to_vcc_vec_i            = 64'hffffffffffffffff;

// Assign lock signals
 assign  PLLLKDET_OUT  =   rx_plllkdet_o; 
 assign  PLLLKDET_OUT_LANE1  =   rx_plllkdet_lane1_o; 
 assign  PLLLKDET_OUT_LANE2  =   rx_plllkdet_lane2_o; 
 assign  PLLLKDET_OUT_LANE3  =   rx_plllkdet_lane3_o; 

 assign chbondi_unused_i  = 4'b0000;


 assign  chbondi = chbondo_LANE1;
 assign  chbondi_LANE1 = chbondi_unused_i;
 assign  chbondi_LANE2 = chbondo_LANE1;
 assign  chbondi_LANE3 = chbondo_LANE2;

//------------------------- GTX Instantiations  --------------------------   
aurora_8b10b_v5_2_GTXE1 # 
    (
        // Simulation attributes
        .GTX_SIM_TXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_RXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_GTXRESET_SPEEDUP   (SIM_GTXRESET_SPEEDUP),
        
        // Share RX PLL parameter
        .GTX_TX_CLK_SOURCE           ("RXPLL")
    )
GTXE1_INST
    (
        //---------------------- Loopback and Powerdown Ports ----------------------
        .LOOPBACK_IN                    (LOOPBACK_IN),
        .RXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        .TXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        //--------------------- Receive Ports - 8b10b Decoder ----------------------
        .RXCHARISCOMMA_OUT              (RXCHARISCOMMA_OUT),
        .RXCHARISK_OUT                  (RXCHARISK_OUT),
	.RXDISPERR_OUT                  (RXDISPERR_OUT),
        .RXNOTINTABLE_OUT               (RXNOTINTABLE_OUT),
        //----------------- Receive Ports - Channel Bonding Ports ------------------
        .RXCHBONDI_IN                   (chbondi), 
        .RXCHBONDLEVEL_IN               (CHAN_BOND_LEVEL),
        .RXCHBONDMASTER_IN              (CHAN_BOND_MASTER),  
        .RXCHBONDO_OUT                  (chbondo),
        .RXCHBONDSLAVE_IN               (CHAN_BOND_SLAVE),
        .RXENCHANSYNC_IN                (ENCHANSYNC_IN),
        //----------------- Receive Ports - Clock Correction Ports -----------------
        .RXCLKCORCNT_OUT                (),
        //------------- Receive Ports - Comma Detection and Alignment --------------
        .RXBYTEREALIGN_OUT              (RXREALIGN_OUT),
        .RXENMCOMMAALIGN_IN             (ENMCOMMAALIGN_IN),
        .RXENPCOMMAALIGN_IN             (ENPCOMMAALIGN_IN),
        //----------------- Receive Ports - RX Data Path interface -----------------
        .RXDATA_OUT                     (RXDATA_OUT),
        .RXRECCLK_OUT                   (RXRECCLK1_OUT),
 
        .RXRESET_IN                     (RXRESET_IN),
        .RXUSRCLK_IN                    (RXUSRCLK_IN),
        .RXUSRCLK2_IN                   (RXUSRCLK2_IN),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .RXCDRRESET_IN                  (1'b0),
        .RXN_IN                         (RX1N_IN),
        .RXP_IN                         (RX1P_IN),
        //------ Receive Ports - RX Elastic Buffer and Phase Alignment Ports -------
        .RXBUFSTATUS_OUT                ({RXBUFERR_OUT, open_rxbufstatus_i}),
        .RXCHANISALIGNED_OUT            (CHBONDDONE_OUT),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTXRXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKRX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKRX_IN                   (tied_to_ground_i),
        .PLLRXRESET_IN                  (1'b0),
        .RXPLLLKDET_OUT                 (rx_plllkdet_o),
        .RXRESETDONE_OUT                (),
        .SOUTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
	.RXPOLARITY_IN                  (RXPOLARITY_IN),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
	.TXCHARISK_IN                   (TXCHARISK_IN),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .TXDATA_IN                      (TXDATA_IN),
        .TXOUTCLK_OUT                   (TXOUTCLK1_OUT),
        .TXRESET_IN                     (TXRESET_IN),
        .TXUSRCLK_IN                    (TXUSRCLK_IN),
        .TXUSRCLK2_IN                   (TXUSRCLK2_IN),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .TXN_OUT                        (TX1N_OUT),
        .TXP_OUT                        (TX1P_OUT),
        //--------- Transmit Ports - TX Elastic Buffer and Phase Alignment ---------
        .TXBUFSTATUS_OUT                ({TXBUFERR_OUT, open_txbufstatus_i}),
        //--------------------- Transmit Ports - TX PLL Ports ----------------------
        .GTXTXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKTX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKTX_IN                   (tied_to_ground_i),
        .PLLTXRESET_IN                  (1'b0),
        .SOUTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .TXPLLLKDET_OUT                 (tx_plllkdet_o),
        .TXRESETDONE_OUT                (),
		  .GTXTEST1                       (GTXTEST1_0)
    );

aurora_8b10b_v5_2_GTXE1 # 
    (
        // Simulation attributes
        .GTX_SIM_TXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_RXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_GTXRESET_SPEEDUP   (SIM_GTXRESET_SPEEDUP),
        
        // Share RX PLL parameter
        .GTX_TX_CLK_SOURCE           ("RXPLL")
    )
GTXE1_INST_LANE1
    (
        //---------------------- Loopback and Powerdown Ports ----------------------
        .LOOPBACK_IN                    (LOOPBACK_IN),
        .RXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        .TXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        //--------------------- Receive Ports - 8b10b Decoder ----------------------
        .RXCHARISCOMMA_OUT              (RXCHARISCOMMA_OUT_LANE1),
        .RXCHARISK_OUT                  (RXCHARISK_OUT_LANE1),
	.RXDISPERR_OUT                  (RXDISPERR_OUT_LANE1),
        .RXNOTINTABLE_OUT               (RXNOTINTABLE_OUT_LANE1),
        //----------------- Receive Ports - Channel Bonding Ports ------------------
        .RXCHBONDI_IN                   (chbondi_LANE1), 
        .RXCHBONDLEVEL_IN               (CHAN_BOND_LEVEL_LANE1),
        .RXCHBONDMASTER_IN              (CHAN_BOND_MASTER_LANE1),  
        .RXCHBONDO_OUT                  (chbondo_LANE1),
        .RXCHBONDSLAVE_IN               (CHAN_BOND_SLAVE_LANE1),
        .RXENCHANSYNC_IN                (ENCHANSYNC_IN_LANE1),
        //----------------- Receive Ports - Clock Correction Ports -----------------
        .RXCLKCORCNT_OUT                (),
        //------------- Receive Ports - Comma Detection and Alignment --------------
        .RXBYTEREALIGN_OUT              (RXREALIGN_OUT_LANE1),
        .RXENMCOMMAALIGN_IN             (ENMCOMMAALIGN_IN_LANE1),
        .RXENPCOMMAALIGN_IN             (ENPCOMMAALIGN_IN_LANE1),
        //----------------- Receive Ports - RX Data Path interface -----------------
        .RXDATA_OUT                     (RXDATA_OUT_LANE1),
        .RXRECCLK_OUT                   (RXRECCLK1_OUT_LANE1),
 
        .RXRESET_IN                     (RXRESET_IN_LANE1),
        .RXUSRCLK_IN                    (RXUSRCLK_IN),
        .RXUSRCLK2_IN                   (RXUSRCLK2_IN),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .RXCDRRESET_IN                  (1'b0),
        .RXN_IN                         (RX1N_IN_LANE1),
        .RXP_IN                         (RX1P_IN_LANE1),
        //------ Receive Ports - RX Elastic Buffer and Phase Alignment Ports -------
        .RXBUFSTATUS_OUT                ({RXBUFERR_OUT_LANE1, open_rxbufstatus_lane1_i}),
        .RXCHANISALIGNED_OUT            (CHBONDDONE_OUT_LANE1),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTXRXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKRX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKRX_IN                   (tied_to_ground_i),
        .PLLRXRESET_IN                  (1'b0),
        .RXPLLLKDET_OUT                 (rx_plllkdet_lane1_o),
        .RXRESETDONE_OUT                (),
        .SOUTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
	.RXPOLARITY_IN                  (RXPOLARITY_IN_LANE1),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
	.TXCHARISK_IN                   (TXCHARISK_IN_LANE1),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .TXDATA_IN                      (TXDATA_IN_LANE1),
        .TXOUTCLK_OUT                   (TXOUTCLK1_OUT_LANE1),
        .TXRESET_IN                     (TXRESET_IN_LANE1),
        .TXUSRCLK_IN                    (TXUSRCLK_IN),
        .TXUSRCLK2_IN                   (TXUSRCLK2_IN),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .TXN_OUT                        (TX1N_OUT_LANE1),
        .TXP_OUT                        (TX1P_OUT_LANE1),
        //--------- Transmit Ports - TX Elastic Buffer and Phase Alignment ---------
        .TXBUFSTATUS_OUT                ({TXBUFERR_OUT_LANE1, open_txbufstatus_lane1_i}),
        //--------------------- Transmit Ports - TX PLL Ports ----------------------
        .GTXTXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKTX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKTX_IN                   (tied_to_ground_i),
        .PLLTXRESET_IN                  (1'b0),
        .SOUTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .TXPLLLKDET_OUT                 (tx_plllkdet_lane1_o),
        .TXRESETDONE_OUT                (),
		  .GTXTEST1                       (GTXTEST1_1)
    );

aurora_8b10b_v5_2_GTXE1 # 
    (
        // Simulation attributes
        .GTX_SIM_TXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_RXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_GTXRESET_SPEEDUP   (SIM_GTXRESET_SPEEDUP),
        
        // Share RX PLL parameter
        .GTX_TX_CLK_SOURCE           ("RXPLL")
    )
GTXE1_INST_LANE2
    (
        //---------------------- Loopback and Powerdown Ports ----------------------
        .LOOPBACK_IN                    (LOOPBACK_IN),
        .RXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        .TXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        //--------------------- Receive Ports - 8b10b Decoder ----------------------
        .RXCHARISCOMMA_OUT              (RXCHARISCOMMA_OUT_LANE2),
        .RXCHARISK_OUT                  (RXCHARISK_OUT_LANE2),
	.RXDISPERR_OUT                  (RXDISPERR_OUT_LANE2),
        .RXNOTINTABLE_OUT               (RXNOTINTABLE_OUT_LANE2),
        //----------------- Receive Ports - Channel Bonding Ports ------------------
        .RXCHBONDI_IN                   (chbondi_LANE2), 
        .RXCHBONDLEVEL_IN               (CHAN_BOND_LEVEL_LANE2),
        .RXCHBONDMASTER_IN              (CHAN_BOND_MASTER_LANE2),  
        .RXCHBONDO_OUT                  (chbondo_LANE2),
        .RXCHBONDSLAVE_IN               (CHAN_BOND_SLAVE_LANE2),
        .RXENCHANSYNC_IN                (ENCHANSYNC_IN_LANE2),
        //----------------- Receive Ports - Clock Correction Ports -----------------
        .RXCLKCORCNT_OUT                (),
        //------------- Receive Ports - Comma Detection and Alignment --------------
        .RXBYTEREALIGN_OUT              (RXREALIGN_OUT_LANE2),
        .RXENMCOMMAALIGN_IN             (ENMCOMMAALIGN_IN_LANE2),
        .RXENPCOMMAALIGN_IN             (ENPCOMMAALIGN_IN_LANE2),
        //----------------- Receive Ports - RX Data Path interface -----------------
        .RXDATA_OUT                     (RXDATA_OUT_LANE2),
        .RXRECCLK_OUT                   (RXRECCLK1_OUT_LANE2),
 
        .RXRESET_IN                     (RXRESET_IN_LANE2),
        .RXUSRCLK_IN                    (RXUSRCLK_IN),
        .RXUSRCLK2_IN                   (RXUSRCLK2_IN),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .RXCDRRESET_IN                  (1'b0),
        .RXN_IN                         (RX1N_IN_LANE2),
        .RXP_IN                         (RX1P_IN_LANE2),
        //------ Receive Ports - RX Elastic Buffer and Phase Alignment Ports -------
        .RXBUFSTATUS_OUT                ({RXBUFERR_OUT_LANE2, open_rxbufstatus_lane2_i}),
        .RXCHANISALIGNED_OUT            (CHBONDDONE_OUT_LANE2),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTXRXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKRX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKRX_IN                   (tied_to_ground_i),
        .PLLRXRESET_IN                  (1'b0),
        .RXPLLLKDET_OUT                 (rx_plllkdet_lane2_o),
        .RXRESETDONE_OUT                (),
        .SOUTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
	.RXPOLARITY_IN                  (RXPOLARITY_IN_LANE2),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
	.TXCHARISK_IN                   (TXCHARISK_IN_LANE2),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .TXDATA_IN                      (TXDATA_IN_LANE2),
        .TXOUTCLK_OUT                   (TXOUTCLK1_OUT_LANE2),
        .TXRESET_IN                     (TXRESET_IN_LANE2),
        .TXUSRCLK_IN                    (TXUSRCLK_IN),
        .TXUSRCLK2_IN                   (TXUSRCLK2_IN),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .TXN_OUT                        (TX1N_OUT_LANE2),
        .TXP_OUT                        (TX1P_OUT_LANE2),
        //--------- Transmit Ports - TX Elastic Buffer and Phase Alignment ---------
        .TXBUFSTATUS_OUT                ({TXBUFERR_OUT_LANE2, open_txbufstatus_lane2_i}),
        //--------------------- Transmit Ports - TX PLL Ports ----------------------
        .GTXTXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKTX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKTX_IN                   (tied_to_ground_i),
        .PLLTXRESET_IN                  (1'b0),
        .SOUTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .TXPLLLKDET_OUT                 (tx_plllkdet_lane2_o),
        .TXRESETDONE_OUT                (),
		  .GTXTEST1                       (GTXTEST1_2)
    );

aurora_8b10b_v5_2_GTXE1 # 
    (
        // Simulation attributes
        .GTX_SIM_TXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_RXREFCLK_SOURCE    (3'b000),
        .GTX_SIM_GTXRESET_SPEEDUP   (SIM_GTXRESET_SPEEDUP),
        
        // Share RX PLL parameter
        .GTX_TX_CLK_SOURCE           ("RXPLL")
    )
GTXE1_INST_LANE3
    (
        //---------------------- Loopback and Powerdown Ports ----------------------
        .LOOPBACK_IN                    (LOOPBACK_IN),
        .RXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        .TXPOWERDOWN_IN                 ({2{POWERDOWN_IN}}),
        //--------------------- Receive Ports - 8b10b Decoder ----------------------
        .RXCHARISCOMMA_OUT              (RXCHARISCOMMA_OUT_LANE3),
        .RXCHARISK_OUT                  (RXCHARISK_OUT_LANE3),
	.RXDISPERR_OUT                  (RXDISPERR_OUT_LANE3),
        .RXNOTINTABLE_OUT               (RXNOTINTABLE_OUT_LANE3),
        //----------------- Receive Ports - Channel Bonding Ports ------------------
        .RXCHBONDI_IN                   (chbondi_LANE3), 
        .RXCHBONDLEVEL_IN               (CHAN_BOND_LEVEL_LANE3),
        .RXCHBONDMASTER_IN              (CHAN_BOND_MASTER_LANE3),  
        .RXCHBONDO_OUT                  (chbondo_LANE3),
        .RXCHBONDSLAVE_IN               (CHAN_BOND_SLAVE_LANE3),
        .RXENCHANSYNC_IN                (ENCHANSYNC_IN_LANE3),
        //----------------- Receive Ports - Clock Correction Ports -----------------
        .RXCLKCORCNT_OUT                (),
        //------------- Receive Ports - Comma Detection and Alignment --------------
        .RXBYTEREALIGN_OUT              (RXREALIGN_OUT_LANE3),
        .RXENMCOMMAALIGN_IN             (ENMCOMMAALIGN_IN_LANE3),
        .RXENPCOMMAALIGN_IN             (ENPCOMMAALIGN_IN_LANE3),
        //----------------- Receive Ports - RX Data Path interface -----------------
        .RXDATA_OUT                     (RXDATA_OUT_LANE3),
        .RXRECCLK_OUT                   (RXRECCLK1_OUT_LANE3),
 
        .RXRESET_IN                     (RXRESET_IN_LANE3),
        .RXUSRCLK_IN                    (RXUSRCLK_IN),
        .RXUSRCLK2_IN                   (RXUSRCLK2_IN),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .RXCDRRESET_IN                  (1'b0),
        .RXN_IN                         (RX1N_IN_LANE3),
        .RXP_IN                         (RX1P_IN_LANE3),
        //------ Receive Ports - RX Elastic Buffer and Phase Alignment Ports -------
        .RXBUFSTATUS_OUT                ({RXBUFERR_OUT_LANE3, open_rxbufstatus_lane3_i}),
        .RXCHANISALIGNED_OUT            (CHBONDDONE_OUT_LANE3),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTXRXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKRX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKRX_IN                   (tied_to_ground_i),
        .PLLRXRESET_IN                  (1'b0),
        .RXPLLLKDET_OUT                 (rx_plllkdet_lane3_o),
        .RXRESETDONE_OUT                (),
        .SOUTHREFCLKRX_IN               (tied_to_ground_vec_i[1:0]),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
	.RXPOLARITY_IN                  (RXPOLARITY_IN_LANE3),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
	.TXCHARISK_IN                   (TXCHARISK_IN_LANE3),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .TXDATA_IN                      (TXDATA_IN_LANE3),
        .TXOUTCLK_OUT                   (TXOUTCLK1_OUT_LANE3),
        .TXRESET_IN                     (TXRESET_IN_LANE3),
        .TXUSRCLK_IN                    (TXUSRCLK_IN),
        .TXUSRCLK2_IN                   (TXUSRCLK2_IN),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .TXN_OUT                        (TX1N_OUT_LANE3),
        .TXP_OUT                        (TX1P_OUT_LANE3),
        //--------- Transmit Ports - TX Elastic Buffer and Phase Alignment ---------
        .TXBUFSTATUS_OUT                ({TXBUFERR_OUT_LANE3, open_txbufstatus_lane3_i}),
        //--------------------- Transmit Ports - TX PLL Ports ----------------------
        .GTXTXRESET_IN                  (GTXRESET_IN),
        .MGTREFCLKTX_IN                 ({tied_to_ground_i , REFCLK}),  
        .NORTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .PERFCLKTX_IN                   (tied_to_ground_i),
        .PLLTXRESET_IN                  (1'b0),
        .SOUTHREFCLKTX_IN               (tied_to_ground_vec_i[1:0]),
        .TXPLLLKDET_OUT                 (tx_plllkdet_lane3_o),
        .TXRESETDONE_OUT                (),
		  .GTXTEST1                       (GTXTEST1_3)
    );

	 wire rst_clk;
	 
	 BUFG bufg_inst
	 (
	     .I    (REFCLK),
		  .O    (rst_clk)
	 );
	 
	 gtx_rerst gtx_rerst_0
    (
        .REFCLK      (rst_clk),
    
        .TXPLLKDET   (rx_plllkdet_o),
        .GTXTEST1    (GTXTEST1_0)
    );
	 
	 gtx_rerst gtx_rerst_1
    (
        .REFCLK      (rst_clk),
    
        .TXPLLKDET   (rx_plllkdet_lane1_o),
        .GTXTEST1    (GTXTEST1_1)
    );
	 
	 gtx_rerst gtx_rerst_2
    (
        .REFCLK      (rst_clk),
    
        .TXPLLKDET   (rx_plllkdet_lane2_o),
        .GTXTEST1    (GTXTEST1_2)
    );

	 gtx_rerst gtx_rerst_3
    (
        .REFCLK      (rst_clk),
    
        .TXPLLKDET   (rx_plllkdet_lane3_o),
        .GTXTEST1    (GTXTEST1_3)
    ); 


 
endmodule
